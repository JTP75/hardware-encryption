// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "aes128_expand_key_hw.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic aes128_expand_key_hw::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic aes128_expand_key_hw::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<15> aes128_expand_key_hw::ap_ST_fsm_state1 = "1";
const sc_lv<15> aes128_expand_key_hw::ap_ST_fsm_state2 = "10";
const sc_lv<15> aes128_expand_key_hw::ap_ST_fsm_state3 = "100";
const sc_lv<15> aes128_expand_key_hw::ap_ST_fsm_state4 = "1000";
const sc_lv<15> aes128_expand_key_hw::ap_ST_fsm_state5 = "10000";
const sc_lv<15> aes128_expand_key_hw::ap_ST_fsm_state6 = "100000";
const sc_lv<15> aes128_expand_key_hw::ap_ST_fsm_state7 = "1000000";
const sc_lv<15> aes128_expand_key_hw::ap_ST_fsm_state8 = "10000000";
const sc_lv<15> aes128_expand_key_hw::ap_ST_fsm_state9 = "100000000";
const sc_lv<15> aes128_expand_key_hw::ap_ST_fsm_state10 = "1000000000";
const sc_lv<15> aes128_expand_key_hw::ap_ST_fsm_state11 = "10000000000";
const sc_lv<15> aes128_expand_key_hw::ap_ST_fsm_state12 = "100000000000";
const sc_lv<15> aes128_expand_key_hw::ap_ST_fsm_state13 = "1000000000000";
const sc_lv<15> aes128_expand_key_hw::ap_ST_fsm_state14 = "10000000000000";
const sc_lv<15> aes128_expand_key_hw::ap_ST_fsm_state15 = "100000000000000";
const sc_lv<32> aes128_expand_key_hw::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> aes128_expand_key_hw::ap_const_lv32_1 = "1";
const sc_lv<1> aes128_expand_key_hw::ap_const_lv1_0 = "0";
const sc_lv<32> aes128_expand_key_hw::ap_const_lv32_4 = "100";
const sc_lv<1> aes128_expand_key_hw::ap_const_lv1_1 = "1";
const sc_lv<32> aes128_expand_key_hw::ap_const_lv32_5 = "101";
const sc_lv<32> aes128_expand_key_hw::ap_const_lv32_7 = "111";
const sc_lv<32> aes128_expand_key_hw::ap_const_lv32_8 = "1000";
const sc_lv<32> aes128_expand_key_hw::ap_const_lv32_9 = "1001";
const sc_lv<32> aes128_expand_key_hw::ap_const_lv32_A = "1010";
const sc_lv<32> aes128_expand_key_hw::ap_const_lv32_C = "1100";
const sc_lv<32> aes128_expand_key_hw::ap_const_lv32_D = "1101";
const sc_lv<32> aes128_expand_key_hw::ap_const_lv32_E = "1110";
const sc_lv<5> aes128_expand_key_hw::ap_const_lv5_0 = "00000";
const sc_lv<32> aes128_expand_key_hw::ap_const_lv32_2 = "10";
const sc_lv<8> aes128_expand_key_hw::ap_const_lv8_10 = "10000";
const sc_lv<32> aes128_expand_key_hw::ap_const_lv32_3 = "11";
const sc_lv<32> aes128_expand_key_hw::ap_const_lv32_6 = "110";
const sc_lv<3> aes128_expand_key_hw::ap_const_lv3_0 = "000";
const sc_lv<2> aes128_expand_key_hw::ap_const_lv2_3 = "11";
const sc_lv<2> aes128_expand_key_hw::ap_const_lv2_2 = "10";
const sc_lv<2> aes128_expand_key_hw::ap_const_lv2_1 = "1";
const sc_lv<2> aes128_expand_key_hw::ap_const_lv2_0 = "00";
const sc_lv<32> aes128_expand_key_hw::ap_const_lv32_B = "1011";
const sc_lv<5> aes128_expand_key_hw::ap_const_lv5_10 = "10000";
const sc_lv<5> aes128_expand_key_hw::ap_const_lv5_1 = "1";
const sc_lv<8> aes128_expand_key_hw::ap_const_lv8_B0 = "10110000";
const sc_lv<3> aes128_expand_key_hw::ap_const_lv3_4 = "100";
const sc_lv<3> aes128_expand_key_hw::ap_const_lv3_1 = "1";
const sc_lv<4> aes128_expand_key_hw::ap_const_lv4_0 = "0000";
const sc_lv<8> aes128_expand_key_hw::ap_const_lv8_4 = "100";
const sc_lv<8> aes128_expand_key_hw::ap_const_lv8_F0 = "11110000";
const sc_lv<8> aes128_expand_key_hw::ap_const_lv8_1 = "1";
const bool aes128_expand_key_hw::ap_const_boolean_1 = true;

aes128_expand_key_hw::aes128_expand_key_hw(sc_module_name name) : sc_module(name), mVcdFile(0) {
    key_U = new aes128_expand_keybkb("key_U");
    key_U->clk(ap_clk);
    key_U->reset(ap_rst);
    key_U->address0(key_address0);
    key_U->ce0(key_ce0);
    key_U->q0(key_q0);
    sbox_hw_U = new aes128_expand_keycud("sbox_hw_U");
    sbox_hw_U->clk(ap_clk);
    sbox_hw_U->reset(ap_rst);
    sbox_hw_U->address0(sbox_hw_address0);
    sbox_hw_U->ce0(sbox_hw_ce0);
    sbox_hw_U->q0(sbox_hw_q0);
    rcon_hw_U = new aes128_expand_keydEe("rcon_hw_U");
    rcon_hw_U->clk(ap_clk);
    rcon_hw_U->reset(ap_rst);
    rcon_hw_U->address0(rcon_hw_address0);
    rcon_hw_U->ce0(rcon_hw_ce0);
    rcon_hw_U->q0(rcon_hw_q0);
    aes128_encrypt_bleOg_U1 = new aes128_encrypt_bleOg<1,1,1,1,1,1,2,1>("aes128_encrypt_bleOg_U1");
    aes128_encrypt_bleOg_U1->din0(ap_var_for_const0);
    aes128_encrypt_bleOg_U1->din1(write_flag_i_reg_346);
    aes128_encrypt_bleOg_U1->din2(write_flag_i_reg_346);
    aes128_encrypt_bleOg_U1->din3(write_flag_i_reg_346);
    aes128_encrypt_bleOg_U1->din4(i_i_reg_379);
    aes128_encrypt_bleOg_U1->dout(write_flag_be_i_fu_707_p6);
    aes128_encrypt_blfYi_U2 = new aes128_encrypt_blfYi<1,1,8,8,8,8,2,8>("aes128_encrypt_blfYi_U2");
    aes128_encrypt_blfYi_U2->din0(tmp_1_2_reg_368);
    aes128_encrypt_blfYi_U2->din1(word_i_13_reg_391);
    aes128_encrypt_blfYi_U2->din2(tmp_1_2_reg_368);
    aes128_encrypt_blfYi_U2->din3(tmp_1_2_reg_368);
    aes128_encrypt_blfYi_U2->din4(i_i_reg_379);
    aes128_encrypt_blfYi_U2->dout(word12_be_i_fu_729_p6);
    aes128_encrypt_blfYi_U3 = new aes128_encrypt_blfYi<1,1,8,8,8,8,2,8>("aes128_encrypt_blfYi_U3");
    aes128_encrypt_blfYi_U3->din0(tmp_2_2_reg_357);
    aes128_encrypt_blfYi_U3->din1(tmp_2_2_reg_357);
    aes128_encrypt_blfYi_U3->din2(word_i_13_reg_391);
    aes128_encrypt_blfYi_U3->din3(word_i_13_reg_391);
    aes128_encrypt_blfYi_U3->din4(i_i_reg_379);
    aes128_encrypt_blfYi_U3->dout(word2_be_i_fu_743_p6);
    aes128_encrypt_blfYi_U4 = new aes128_encrypt_blfYi<1,1,8,8,8,8,2,8>("aes128_encrypt_blfYi_U4");
    aes128_encrypt_blfYi_U4->din0(word_i_13_reg_391);
    aes128_encrypt_blfYi_U4->din1(word_i_fu_68);
    aes128_encrypt_blfYi_U4->din2(word_i_fu_68);
    aes128_encrypt_blfYi_U4->din3(word_i_fu_68);
    aes128_encrypt_blfYi_U4->din4(i_i_reg_379);
    aes128_encrypt_blfYi_U4->dout(word_be_i_fu_757_p6);
    aes128_encrypt_blfYi_U5 = new aes128_encrypt_blfYi<1,1,8,8,8,8,2,8>("aes128_encrypt_blfYi_U5");
    aes128_encrypt_blfYi_U5->din0(tmp_0_s_reg_438);
    aes128_encrypt_blfYi_U5->din1(tmp_1_3_reg_427);
    aes128_encrypt_blfYi_U5->din2(tmp_2_3_reg_416);
    aes128_encrypt_blfYi_U5->din3(tmp_3_3_reg_405);
    aes128_encrypt_blfYi_U5->din4(tmp_21_fu_792_p5);
    aes128_encrypt_blfYi_U5->dout(tmp_21_fu_792_p6);
    aes128_encrypt_blfYi_U6 = new aes128_encrypt_blfYi<1,1,8,8,8,8,2,8>("aes128_encrypt_blfYi_U6");
    aes128_encrypt_blfYi_U6->din0(tmp_0_1_reg_570);
    aes128_encrypt_blfYi_U6->din1(tmp_1_5_reg_557);
    aes128_encrypt_blfYi_U6->din2(tmp_2_5_reg_544);
    aes128_encrypt_blfYi_U6->din3(tmp_3_5_reg_531);
    aes128_encrypt_blfYi_U6->din4(tmp_25_fu_870_p5);
    aes128_encrypt_blfYi_U6->dout(tmp_25_fu_870_p6);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state10);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state11);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state12);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state13);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state14);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state15);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state7);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state8);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state9);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( tmp_16_fu_642_p2 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_phi_mux_i_i_phi_fu_383_p4);
    sensitive << ( i_i_reg_379 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( tmp_16_fu_642_p2 );

    SC_METHOD(thread_exitcond1_fu_776_p2);
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( i_1_reg_448 );

    SC_METHOD(thread_exitcond2_fu_648_p2);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( i_reg_263 );

    SC_METHOD(thread_exitcond3_fu_607_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( size_reg_148 );

    SC_METHOD(thread_exitcond_fu_843_p2);
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( i_2_reg_582 );

    SC_METHOD(thread_exitcond_i_fu_695_p2);
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( i_i_reg_379 );

    SC_METHOD(thread_expanded_key_address0);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( tmp_15_fu_638_p1 );
    sensitive << ( tmp_19_fu_676_p1 );
    sensitive << ( tmp_24_fu_861_p1 );
    sensitive << ( tmp_27_fu_890_p1 );

    SC_METHOD(thread_expanded_key_ce0);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_expanded_key_d0);
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( key_load_cast_fu_633_p1 );
    sensitive << ( tmp_26_fu_884_p2 );

    SC_METHOD(thread_expanded_key_we0);
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_i_10_fu_849_p2);
    sensitive << ( i_2_reg_582 );

    SC_METHOD(thread_i_7_fu_654_p2);
    sensitive << ( i_reg_263 );

    SC_METHOD(thread_i_8_fu_701_p2);
    sensitive << ( i_i_reg_379 );

    SC_METHOD(thread_i_9_fu_782_p2);
    sensitive << ( i_1_reg_448 );

    SC_METHOD(thread_j_5_fu_814_p0);
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( j_fu_64 );

    SC_METHOD(thread_j_5_fu_814_p2);
    sensitive << ( j_5_fu_814_p0 );

    SC_METHOD(thread_key_address0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( tmp_14_fu_619_p1 );

    SC_METHOD(thread_key_ce0);
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_key_load_cast1_fu_629_p1);
    sensitive << ( key_q0 );

    SC_METHOD(thread_key_load_cast_fu_633_p1);
    sensitive << ( key_load_cast1_fu_629_p1 );

    SC_METHOD(thread_rcon_hw_address0);
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( tmp_20_fu_820_p1 );

    SC_METHOD(thread_rcon_hw_ce0);
    sensitive << ( ap_CS_fsm_state10 );

    SC_METHOD(thread_sbox_hw_address0);
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( tmp_22_fu_806_p1 );

    SC_METHOD(thread_sbox_hw_ce0);
    sensitive << ( ap_CS_fsm_state10 );

    SC_METHOD(thread_size_3_fu_837_p2);
    sensitive << ( size_1_reg_207 );

    SC_METHOD(thread_size_4_fu_895_p2);
    sensitive << ( size_2_reg_593 );

    SC_METHOD(thread_tmp_0_3_fu_830_p2);
    sensitive << ( rcon_hw_q0 );
    sensitive << ( tmp_0_s_reg_438 );

    SC_METHOD(thread_tmp_0_4_fu_721_p3);
    sensitive << ( tmp_33_reg_252 );
    sensitive << ( write_flag_i_reg_346 );
    sensitive << ( word_i_fu_68 );

    SC_METHOD(thread_tmp_14_fu_619_p1);
    sensitive << ( size_reg_148 );

    SC_METHOD(thread_tmp_15_fu_638_p1);
    sensitive << ( tmp_s_reg_904 );

    SC_METHOD(thread_tmp_16_fu_642_p2);
    sensitive << ( size_1_reg_207 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_tmp_17_fu_689_p2);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( exitcond2_fu_648_p2 );
    sensitive << ( tmp_29_fu_685_p1 );

    SC_METHOD(thread_tmp_18_fu_670_p2);
    sensitive << ( size_1_reg_207 );
    sensitive << ( tmp_cast_cast_fu_666_p1 );

    SC_METHOD(thread_tmp_19_fu_676_p1);
    sensitive << ( tmp_18_fu_670_p2 );

    SC_METHOD(thread_tmp_20_fu_820_p0);
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( j_fu_64 );

    SC_METHOD(thread_tmp_20_fu_820_p1);
    sensitive << ( tmp_20_fu_820_p0 );

    SC_METHOD(thread_tmp_21_fu_792_p5);
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( i_1_reg_448 );

    SC_METHOD(thread_tmp_22_fu_806_p1);
    sensitive << ( tmp_21_fu_792_p6 );

    SC_METHOD(thread_tmp_23_fu_855_p2);
    sensitive << ( size_2_reg_593 );

    SC_METHOD(thread_tmp_24_fu_861_p1);
    sensitive << ( tmp_23_fu_855_p2 );

    SC_METHOD(thread_tmp_25_fu_870_p5);
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( i_2_reg_582 );

    SC_METHOD(thread_tmp_26_fu_884_p2);
    sensitive << ( expanded_key_q0 );
    sensitive << ( tmp_25_reg_1036 );

    SC_METHOD(thread_tmp_27_fu_890_p1);
    sensitive << ( size_2_reg_593 );

    SC_METHOD(thread_tmp_29_fu_685_p1);
    sensitive << ( size_1_reg_207 );

    SC_METHOD(thread_tmp_30_fu_681_p1);
    sensitive << ( i_reg_263 );

    SC_METHOD(thread_tmp_31_fu_788_p1);
    sensitive << ( i_1_reg_448 );

    SC_METHOD(thread_tmp_cast_cast_fu_666_p1);
    sensitive << ( tmp_fu_660_p2 );

    SC_METHOD(thread_tmp_fu_660_p2);
    sensitive << ( i_reg_263 );

    SC_METHOD(thread_tmp_s_fu_613_p2);
    sensitive << ( size_reg_148 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond3_fu_607_p2 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( exitcond2_fu_648_p2 );
    sensitive << ( tmp_17_fu_689_p2 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( exitcond_i_fu_695_p2 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( exitcond1_fu_776_p2 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( exitcond_fu_843_p2 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( tmp_16_fu_642_p2 );

    SC_THREAD(thread_ap_var_for_const0);

    ap_CS_fsm = "000000000000001";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "aes128_expand_key_hw_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, expanded_key_address0, "(port)expanded_key_address0");
    sc_trace(mVcdFile, expanded_key_ce0, "(port)expanded_key_ce0");
    sc_trace(mVcdFile, expanded_key_we0, "(port)expanded_key_we0");
    sc_trace(mVcdFile, expanded_key_d0, "(port)expanded_key_d0");
    sc_trace(mVcdFile, expanded_key_q0, "(port)expanded_key_q0");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, key_address0, "key_address0");
    sc_trace(mVcdFile, key_ce0, "key_ce0");
    sc_trace(mVcdFile, key_q0, "key_q0");
    sc_trace(mVcdFile, sbox_hw_address0, "sbox_hw_address0");
    sc_trace(mVcdFile, sbox_hw_ce0, "sbox_hw_ce0");
    sc_trace(mVcdFile, sbox_hw_q0, "sbox_hw_q0");
    sc_trace(mVcdFile, rcon_hw_address0, "rcon_hw_address0");
    sc_trace(mVcdFile, rcon_hw_ce0, "rcon_hw_ce0");
    sc_trace(mVcdFile, rcon_hw_q0, "rcon_hw_q0");
    sc_trace(mVcdFile, tmp_s_fu_613_p2, "tmp_s_fu_613_p2");
    sc_trace(mVcdFile, tmp_s_reg_904, "tmp_s_reg_904");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, exitcond3_fu_607_p2, "exitcond3_fu_607_p2");
    sc_trace(mVcdFile, i_7_fu_654_p2, "i_7_fu_654_p2");
    sc_trace(mVcdFile, i_7_reg_928, "i_7_reg_928");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, exitcond2_fu_648_p2, "exitcond2_fu_648_p2");
    sc_trace(mVcdFile, tmp_30_fu_681_p1, "tmp_30_fu_681_p1");
    sc_trace(mVcdFile, tmp_30_reg_938, "tmp_30_reg_938");
    sc_trace(mVcdFile, tmp_17_fu_689_p2, "tmp_17_fu_689_p2");
    sc_trace(mVcdFile, tmp_17_reg_942, "tmp_17_reg_942");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, i_8_fu_701_p2, "i_8_fu_701_p2");
    sc_trace(mVcdFile, i_8_reg_963, "i_8_reg_963");
    sc_trace(mVcdFile, ap_CS_fsm_state8, "ap_CS_fsm_state8");
    sc_trace(mVcdFile, write_flag_be_i_fu_707_p6, "write_flag_be_i_fu_707_p6");
    sc_trace(mVcdFile, write_flag_be_i_reg_968, "write_flag_be_i_reg_968");
    sc_trace(mVcdFile, exitcond_i_fu_695_p2, "exitcond_i_fu_695_p2");
    sc_trace(mVcdFile, tmp_0_4_fu_721_p3, "tmp_0_4_fu_721_p3");
    sc_trace(mVcdFile, word12_be_i_fu_729_p6, "word12_be_i_fu_729_p6");
    sc_trace(mVcdFile, ap_CS_fsm_state9, "ap_CS_fsm_state9");
    sc_trace(mVcdFile, word2_be_i_fu_743_p6, "word2_be_i_fu_743_p6");
    sc_trace(mVcdFile, i_9_fu_782_p2, "i_9_fu_782_p2");
    sc_trace(mVcdFile, i_9_reg_991, "i_9_reg_991");
    sc_trace(mVcdFile, ap_CS_fsm_state10, "ap_CS_fsm_state10");
    sc_trace(mVcdFile, tmp_31_fu_788_p1, "tmp_31_fu_788_p1");
    sc_trace(mVcdFile, tmp_31_reg_996, "tmp_31_reg_996");
    sc_trace(mVcdFile, exitcond1_fu_776_p2, "exitcond1_fu_776_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state11, "ap_CS_fsm_state11");
    sc_trace(mVcdFile, size_3_fu_837_p2, "size_3_fu_837_p2");
    sc_trace(mVcdFile, size_3_reg_1018, "size_3_reg_1018");
    sc_trace(mVcdFile, ap_CS_fsm_state13, "ap_CS_fsm_state13");
    sc_trace(mVcdFile, i_10_fu_849_p2, "i_10_fu_849_p2");
    sc_trace(mVcdFile, i_10_reg_1026, "i_10_reg_1026");
    sc_trace(mVcdFile, ap_CS_fsm_state14, "ap_CS_fsm_state14");
    sc_trace(mVcdFile, exitcond_fu_843_p2, "exitcond_fu_843_p2");
    sc_trace(mVcdFile, tmp_25_fu_870_p6, "tmp_25_fu_870_p6");
    sc_trace(mVcdFile, tmp_25_reg_1036, "tmp_25_reg_1036");
    sc_trace(mVcdFile, size_4_fu_895_p2, "size_4_fu_895_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state15, "ap_CS_fsm_state15");
    sc_trace(mVcdFile, size_reg_148, "size_reg_148");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, tmp_3_5_reg_531, "tmp_3_5_reg_531");
    sc_trace(mVcdFile, tmp_3_reg_159, "tmp_3_reg_159");
    sc_trace(mVcdFile, tmp_2_5_reg_544, "tmp_2_5_reg_544");
    sc_trace(mVcdFile, tmp_2_reg_171, "tmp_2_reg_171");
    sc_trace(mVcdFile, tmp_1_5_reg_557, "tmp_1_5_reg_557");
    sc_trace(mVcdFile, tmp_1_reg_183, "tmp_1_reg_183");
    sc_trace(mVcdFile, tmp_0_1_reg_570, "tmp_0_1_reg_570");
    sc_trace(mVcdFile, tmp_0_reg_195, "tmp_0_reg_195");
    sc_trace(mVcdFile, size_1_reg_207, "size_1_reg_207");
    sc_trace(mVcdFile, word_3_read_assign_reg_219, "word_3_read_assign_reg_219");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, tmp_16_fu_642_p2, "tmp_16_fu_642_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state7, "ap_CS_fsm_state7");
    sc_trace(mVcdFile, word_2_read_assign_reg_230, "word_2_read_assign_reg_230");
    sc_trace(mVcdFile, word_1_read_assign_reg_241, "word_1_read_assign_reg_241");
    sc_trace(mVcdFile, tmp_33_reg_252, "tmp_33_reg_252");
    sc_trace(mVcdFile, i_reg_263, "i_reg_263");
    sc_trace(mVcdFile, word_3_read_assign_s_reg_274, "word_3_read_assign_s_reg_274");
    sc_trace(mVcdFile, word_2_read_assign_s_reg_292, "word_2_read_assign_s_reg_292");
    sc_trace(mVcdFile, word_1_read_assign_s_reg_310, "word_1_read_assign_s_reg_310");
    sc_trace(mVcdFile, tmp_29_be_reg_328, "tmp_29_be_reg_328");
    sc_trace(mVcdFile, write_flag_i_reg_346, "write_flag_i_reg_346");
    sc_trace(mVcdFile, tmp_2_2_reg_357, "tmp_2_2_reg_357");
    sc_trace(mVcdFile, tmp_1_2_reg_368, "tmp_1_2_reg_368");
    sc_trace(mVcdFile, ap_phi_mux_i_i_phi_fu_383_p4, "ap_phi_mux_i_i_phi_fu_383_p4");
    sc_trace(mVcdFile, i_i_reg_379, "i_i_reg_379");
    sc_trace(mVcdFile, word_i_13_reg_391, "word_i_13_reg_391");
    sc_trace(mVcdFile, tmp_3_3_reg_405, "tmp_3_3_reg_405");
    sc_trace(mVcdFile, ap_CS_fsm_state12, "ap_CS_fsm_state12");
    sc_trace(mVcdFile, tmp_2_3_reg_416, "tmp_2_3_reg_416");
    sc_trace(mVcdFile, tmp_1_3_reg_427, "tmp_1_3_reg_427");
    sc_trace(mVcdFile, tmp_0_s_reg_438, "tmp_0_s_reg_438");
    sc_trace(mVcdFile, i_1_reg_448, "i_1_reg_448");
    sc_trace(mVcdFile, tmp_3_3_be_reg_459, "tmp_3_3_be_reg_459");
    sc_trace(mVcdFile, tmp_2_3_be_reg_477, "tmp_2_3_be_reg_477");
    sc_trace(mVcdFile, tmp_1_3_be_reg_495, "tmp_1_3_be_reg_495");
    sc_trace(mVcdFile, tmp_0_be_reg_513, "tmp_0_be_reg_513");
    sc_trace(mVcdFile, tmp_0_3_fu_830_p2, "tmp_0_3_fu_830_p2");
    sc_trace(mVcdFile, i_2_reg_582, "i_2_reg_582");
    sc_trace(mVcdFile, size_2_reg_593, "size_2_reg_593");
    sc_trace(mVcdFile, tmp_14_fu_619_p1, "tmp_14_fu_619_p1");
    sc_trace(mVcdFile, tmp_15_fu_638_p1, "tmp_15_fu_638_p1");
    sc_trace(mVcdFile, tmp_19_fu_676_p1, "tmp_19_fu_676_p1");
    sc_trace(mVcdFile, tmp_22_fu_806_p1, "tmp_22_fu_806_p1");
    sc_trace(mVcdFile, tmp_20_fu_820_p1, "tmp_20_fu_820_p1");
    sc_trace(mVcdFile, tmp_24_fu_861_p1, "tmp_24_fu_861_p1");
    sc_trace(mVcdFile, tmp_27_fu_890_p1, "tmp_27_fu_890_p1");
    sc_trace(mVcdFile, j_fu_64, "j_fu_64");
    sc_trace(mVcdFile, j_5_fu_814_p2, "j_5_fu_814_p2");
    sc_trace(mVcdFile, word_i_fu_68, "word_i_fu_68");
    sc_trace(mVcdFile, word_be_i_fu_757_p6, "word_be_i_fu_757_p6");
    sc_trace(mVcdFile, key_load_cast_fu_633_p1, "key_load_cast_fu_633_p1");
    sc_trace(mVcdFile, tmp_26_fu_884_p2, "tmp_26_fu_884_p2");
    sc_trace(mVcdFile, key_load_cast1_fu_629_p1, "key_load_cast1_fu_629_p1");
    sc_trace(mVcdFile, tmp_fu_660_p2, "tmp_fu_660_p2");
    sc_trace(mVcdFile, tmp_cast_cast_fu_666_p1, "tmp_cast_cast_fu_666_p1");
    sc_trace(mVcdFile, tmp_18_fu_670_p2, "tmp_18_fu_670_p2");
    sc_trace(mVcdFile, tmp_29_fu_685_p1, "tmp_29_fu_685_p1");
    sc_trace(mVcdFile, tmp_21_fu_792_p5, "tmp_21_fu_792_p5");
    sc_trace(mVcdFile, tmp_21_fu_792_p6, "tmp_21_fu_792_p6");
    sc_trace(mVcdFile, j_5_fu_814_p0, "j_5_fu_814_p0");
    sc_trace(mVcdFile, tmp_20_fu_820_p0, "tmp_20_fu_820_p0");
    sc_trace(mVcdFile, tmp_23_fu_855_p2, "tmp_23_fu_855_p2");
    sc_trace(mVcdFile, tmp_25_fu_870_p5, "tmp_25_fu_870_p5");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
}

aes128_expand_key_hw::~aes128_expand_key_hw() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    delete key_U;
    delete sbox_hw_U;
    delete rcon_hw_U;
    delete aes128_encrypt_bleOg_U1;
    delete aes128_encrypt_blfYi_U2;
    delete aes128_encrypt_blfYi_U3;
    delete aes128_encrypt_blfYi_U4;
    delete aes128_encrypt_blfYi_U5;
    delete aes128_encrypt_blfYi_U6;
}

void aes128_expand_key_hw::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_lv1_1;
}

void aes128_expand_key_hw::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        i_1_reg_448 = i_9_reg_991.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, exitcond_i_fu_695_p2.read()))) {
        i_1_reg_448 = ap_const_lv3_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read())) {
        i_2_reg_582 = i_10_reg_1026.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read())) {
        i_2_reg_582 = ap_const_lv3_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
         esl_seteq<1,1,1>(exitcond2_fu_648_p2.read(), ap_const_lv1_1) && 
         esl_seteq<1,1,1>(tmp_17_fu_689_p2.read(), ap_const_lv1_1))) {
        i_i_reg_379 = ap_const_lv2_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        i_i_reg_379 = i_8_reg_963.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        i_reg_263 = i_7_reg_928.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, tmp_16_fu_642_p2.read()))) {
        i_reg_263 = ap_const_lv3_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, exitcond1_fu_776_p2.read()))) {
        j_fu_64 = j_5_fu_814_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                esl_seteq<1,1,1>(exitcond3_fu_607_p2.read(), ap_const_lv1_1))) {
        j_fu_64 = ap_const_lv32_1;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, exitcond_fu_843_p2.read()))) {
        size_1_reg_207 = size_3_reg_1018.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                esl_seteq<1,1,1>(exitcond3_fu_607_p2.read(), ap_const_lv1_1))) {
        size_1_reg_207 = ap_const_lv8_10;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read())) {
        size_2_reg_593 = size_4_fu_895_p2.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read())) {
        size_2_reg_593 = size_1_reg_207.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        size_reg_148 = tmp_s_reg_904.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        size_reg_148 = ap_const_lv5_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
         esl_seteq<1,1,1>(exitcond2_fu_648_p2.read(), ap_const_lv1_1) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, tmp_17_fu_689_p2.read()))) {
        tmp_0_1_reg_570 = tmp_33_reg_252.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) && 
                esl_seteq<1,1,1>(tmp_17_reg_942.read(), ap_const_lv1_1))) {
        tmp_0_1_reg_570 = tmp_0_3_fu_830_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) && 
         esl_seteq<1,2,2>(tmp_31_reg_996.read(), ap_const_lv2_0))) {
        tmp_0_be_reg_513 = sbox_hw_q0.read();
    } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) && 
                 esl_seteq<1,2,2>(tmp_31_reg_996.read(), ap_const_lv2_3)) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) && 
                 esl_seteq<1,2,2>(tmp_31_reg_996.read(), ap_const_lv2_2)) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) && 
                 esl_seteq<1,2,2>(tmp_31_reg_996.read(), ap_const_lv2_1)))) {
        tmp_0_be_reg_513 = tmp_0_s_reg_438.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        tmp_0_s_reg_438 = tmp_0_be_reg_513.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, exitcond_i_fu_695_p2.read()))) {
        tmp_0_s_reg_438 = tmp_0_4_fu_721_p3.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
         esl_seteq<1,1,1>(exitcond2_fu_648_p2.read(), ap_const_lv1_1) && 
         esl_seteq<1,1,1>(tmp_17_fu_689_p2.read(), ap_const_lv1_1))) {
        tmp_1_2_reg_368 = word_1_read_assign_reg_241.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        tmp_1_2_reg_368 = word12_be_i_fu_729_p6.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) && 
         esl_seteq<1,2,2>(tmp_31_reg_996.read(), ap_const_lv2_1))) {
        tmp_1_3_be_reg_495 = sbox_hw_q0.read();
    } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) && 
                 esl_seteq<1,2,2>(tmp_31_reg_996.read(), ap_const_lv2_3)) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) && 
                 esl_seteq<1,2,2>(tmp_31_reg_996.read(), ap_const_lv2_2)) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) && 
                 esl_seteq<1,2,2>(tmp_31_reg_996.read(), ap_const_lv2_0)))) {
        tmp_1_3_be_reg_495 = tmp_1_3_reg_427.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        tmp_1_3_reg_427 = tmp_1_3_be_reg_495.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, exitcond_i_fu_695_p2.read()))) {
        tmp_1_3_reg_427 = tmp_1_2_reg_368.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
         esl_seteq<1,1,1>(exitcond2_fu_648_p2.read(), ap_const_lv1_1) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, tmp_17_fu_689_p2.read()))) {
        tmp_1_5_reg_557 = word_1_read_assign_reg_241.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) && 
                esl_seteq<1,1,1>(tmp_17_reg_942.read(), ap_const_lv1_1))) {
        tmp_1_5_reg_557 = tmp_1_3_reg_427.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
         esl_seteq<1,2,2>(tmp_30_reg_938.read(), ap_const_lv2_0))) {
        tmp_29_be_reg_328 = expanded_key_q0.read();
    } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
                 esl_seteq<1,2,2>(tmp_30_reg_938.read(), ap_const_lv2_3)) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
                 esl_seteq<1,2,2>(tmp_30_reg_938.read(), ap_const_lv2_2)) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
                 esl_seteq<1,2,2>(tmp_30_reg_938.read(), ap_const_lv2_1)))) {
        tmp_29_be_reg_328 = tmp_33_reg_252.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
         esl_seteq<1,1,1>(exitcond2_fu_648_p2.read(), ap_const_lv1_1) && 
         esl_seteq<1,1,1>(tmp_17_fu_689_p2.read(), ap_const_lv1_1))) {
        tmp_2_2_reg_357 = word_2_read_assign_reg_230.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        tmp_2_2_reg_357 = word2_be_i_fu_743_p6.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) && 
         esl_seteq<1,2,2>(tmp_31_reg_996.read(), ap_const_lv2_2))) {
        tmp_2_3_be_reg_477 = sbox_hw_q0.read();
    } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) && 
                 esl_seteq<1,2,2>(tmp_31_reg_996.read(), ap_const_lv2_3)) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) && 
                 esl_seteq<1,2,2>(tmp_31_reg_996.read(), ap_const_lv2_1)) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) && 
                 esl_seteq<1,2,2>(tmp_31_reg_996.read(), ap_const_lv2_0)))) {
        tmp_2_3_be_reg_477 = tmp_2_3_reg_416.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        tmp_2_3_reg_416 = tmp_2_3_be_reg_477.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, exitcond_i_fu_695_p2.read()))) {
        tmp_2_3_reg_416 = tmp_2_2_reg_357.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
         esl_seteq<1,1,1>(exitcond2_fu_648_p2.read(), ap_const_lv1_1) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, tmp_17_fu_689_p2.read()))) {
        tmp_2_5_reg_544 = word_2_read_assign_reg_230.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) && 
                esl_seteq<1,1,1>(tmp_17_reg_942.read(), ap_const_lv1_1))) {
        tmp_2_5_reg_544 = tmp_2_3_reg_416.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        tmp_33_reg_252 = tmp_29_be_reg_328.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, tmp_16_fu_642_p2.read()))) {
        tmp_33_reg_252 = tmp_0_reg_195.read();
    }
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) && 
          esl_seteq<1,2,2>(tmp_31_reg_996.read(), ap_const_lv2_2)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) && 
          esl_seteq<1,2,2>(tmp_31_reg_996.read(), ap_const_lv2_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) && 
          esl_seteq<1,2,2>(tmp_31_reg_996.read(), ap_const_lv2_0)))) {
        tmp_3_3_be_reg_459 = tmp_3_3_reg_405.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) && 
                esl_seteq<1,2,2>(tmp_31_reg_996.read(), ap_const_lv2_3))) {
        tmp_3_3_be_reg_459 = sbox_hw_q0.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        tmp_3_3_reg_405 = tmp_3_3_be_reg_459.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, exitcond_i_fu_695_p2.read()))) {
        tmp_3_3_reg_405 = tmp_33_reg_252.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
         esl_seteq<1,1,1>(exitcond2_fu_648_p2.read(), ap_const_lv1_1) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, tmp_17_fu_689_p2.read()))) {
        tmp_3_5_reg_531 = word_3_read_assign_reg_219.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) && 
                esl_seteq<1,1,1>(tmp_17_reg_942.read(), ap_const_lv1_1))) {
        tmp_3_5_reg_531 = tmp_3_3_reg_405.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        word_1_read_assign_reg_241 = word_1_read_assign_s_reg_310.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, tmp_16_fu_642_p2.read()))) {
        word_1_read_assign_reg_241 = tmp_1_reg_183.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
         esl_seteq<1,2,2>(tmp_30_reg_938.read(), ap_const_lv2_1))) {
        word_1_read_assign_s_reg_310 = expanded_key_q0.read();
    } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
                 esl_seteq<1,2,2>(tmp_30_reg_938.read(), ap_const_lv2_3)) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
                 esl_seteq<1,2,2>(tmp_30_reg_938.read(), ap_const_lv2_2)) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
                 esl_seteq<1,2,2>(tmp_30_reg_938.read(), ap_const_lv2_0)))) {
        word_1_read_assign_s_reg_310 = word_1_read_assign_reg_241.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        word_2_read_assign_reg_230 = word_2_read_assign_s_reg_292.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, tmp_16_fu_642_p2.read()))) {
        word_2_read_assign_reg_230 = tmp_2_reg_171.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
         esl_seteq<1,2,2>(tmp_30_reg_938.read(), ap_const_lv2_2))) {
        word_2_read_assign_s_reg_292 = expanded_key_q0.read();
    } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
                 esl_seteq<1,2,2>(tmp_30_reg_938.read(), ap_const_lv2_3)) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
                 esl_seteq<1,2,2>(tmp_30_reg_938.read(), ap_const_lv2_1)) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
                 esl_seteq<1,2,2>(tmp_30_reg_938.read(), ap_const_lv2_0)))) {
        word_2_read_assign_s_reg_292 = word_2_read_assign_reg_230.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        word_3_read_assign_reg_219 = word_3_read_assign_s_reg_274.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, tmp_16_fu_642_p2.read()))) {
        word_3_read_assign_reg_219 = tmp_3_reg_159.read();
    }
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
          esl_seteq<1,2,2>(tmp_30_reg_938.read(), ap_const_lv2_2)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
          esl_seteq<1,2,2>(tmp_30_reg_938.read(), ap_const_lv2_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
          esl_seteq<1,2,2>(tmp_30_reg_938.read(), ap_const_lv2_0)))) {
        word_3_read_assign_s_reg_274 = word_3_read_assign_reg_219.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
                esl_seteq<1,2,2>(tmp_30_reg_938.read(), ap_const_lv2_3))) {
        word_3_read_assign_s_reg_274 = expanded_key_q0.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_i_fu_695_p2.read()))) {
        if (esl_seteq<1,2,2>(ap_const_lv2_0, ap_phi_mux_i_i_phi_fu_383_p4.read())) {
            word_i_13_reg_391 = tmp_1_2_reg_368.read();
        } else if ((!esl_seteq<1,2,2>(ap_const_lv2_0, ap_phi_mux_i_i_phi_fu_383_p4.read()) && 
                    !esl_seteq<1,2,2>(ap_const_lv2_1, ap_phi_mux_i_i_phi_fu_383_p4.read()))) {
            word_i_13_reg_391 = word_3_read_assign_reg_219.read();
        } else if (esl_seteq<1,2,2>(ap_const_lv2_1, ap_phi_mux_i_i_phi_fu_383_p4.read())) {
            word_i_13_reg_391 = tmp_2_2_reg_357.read();
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
         esl_seteq<1,1,1>(exitcond2_fu_648_p2.read(), ap_const_lv1_1) && 
         esl_seteq<1,1,1>(tmp_17_fu_689_p2.read(), ap_const_lv1_1))) {
        write_flag_i_reg_346 = ap_const_lv1_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        write_flag_i_reg_346 = write_flag_be_i_reg_968.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) {
        i_10_reg_1026 = i_10_fu_849_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        i_7_reg_928 = i_7_fu_654_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        i_8_reg_963 = i_8_fu_701_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        i_9_reg_991 = i_9_fu_782_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read())) {
        size_3_reg_1018 = size_3_fu_837_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, exitcond_fu_843_p2.read()))) {
        tmp_0_reg_195 = tmp_0_1_reg_570.read();
        tmp_1_reg_183 = tmp_1_5_reg_557.read();
        tmp_2_reg_171 = tmp_2_5_reg_544.read();
        tmp_3_reg_159 = tmp_3_5_reg_531.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && esl_seteq<1,1,1>(exitcond2_fu_648_p2.read(), ap_const_lv1_1))) {
        tmp_17_reg_942 = tmp_17_fu_689_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_843_p2.read()))) {
        tmp_25_reg_1036 = tmp_25_fu_870_p6.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond2_fu_648_p2.read()))) {
        tmp_30_reg_938 = tmp_30_fu_681_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_fu_776_p2.read()))) {
        tmp_31_reg_996 = tmp_31_fu_788_p1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        tmp_s_reg_904 = tmp_s_fu_613_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        word_i_fu_68 = word_be_i_fu_757_p6.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_i_fu_695_p2.read()))) {
        write_flag_be_i_reg_968 = write_flag_be_i_fu_707_p6.read();
    }
}

void aes128_expand_key_hw::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void aes128_expand_key_hw::thread_ap_CS_fsm_state10() {
    ap_CS_fsm_state10 = ap_CS_fsm.read()[9];
}

void aes128_expand_key_hw::thread_ap_CS_fsm_state11() {
    ap_CS_fsm_state11 = ap_CS_fsm.read()[10];
}

void aes128_expand_key_hw::thread_ap_CS_fsm_state12() {
    ap_CS_fsm_state12 = ap_CS_fsm.read()[11];
}

void aes128_expand_key_hw::thread_ap_CS_fsm_state13() {
    ap_CS_fsm_state13 = ap_CS_fsm.read()[12];
}

void aes128_expand_key_hw::thread_ap_CS_fsm_state14() {
    ap_CS_fsm_state14 = ap_CS_fsm.read()[13];
}

void aes128_expand_key_hw::thread_ap_CS_fsm_state15() {
    ap_CS_fsm_state15 = ap_CS_fsm.read()[14];
}

void aes128_expand_key_hw::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void aes128_expand_key_hw::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void aes128_expand_key_hw::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void aes128_expand_key_hw::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void aes128_expand_key_hw::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read()[5];
}

void aes128_expand_key_hw::thread_ap_CS_fsm_state7() {
    ap_CS_fsm_state7 = ap_CS_fsm.read()[6];
}

void aes128_expand_key_hw::thread_ap_CS_fsm_state8() {
    ap_CS_fsm_state8 = ap_CS_fsm.read()[7];
}

void aes128_expand_key_hw::thread_ap_CS_fsm_state9() {
    ap_CS_fsm_state9 = ap_CS_fsm.read()[8];
}

void aes128_expand_key_hw::thread_ap_done() {
    if (((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_16_fu_642_p2.read())))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void aes128_expand_key_hw::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void aes128_expand_key_hw::thread_ap_phi_mux_i_i_phi_fu_383_p4() {
    ap_phi_mux_i_i_phi_fu_383_p4 = i_i_reg_379.read();
}

void aes128_expand_key_hw::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, tmp_16_fu_642_p2.read()))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void aes128_expand_key_hw::thread_exitcond1_fu_776_p2() {
    exitcond1_fu_776_p2 = (!i_1_reg_448.read().is_01() || !ap_const_lv3_4.is_01())? sc_lv<1>(): sc_lv<1>(i_1_reg_448.read() == ap_const_lv3_4);
}

void aes128_expand_key_hw::thread_exitcond2_fu_648_p2() {
    exitcond2_fu_648_p2 = (!i_reg_263.read().is_01() || !ap_const_lv3_4.is_01())? sc_lv<1>(): sc_lv<1>(i_reg_263.read() == ap_const_lv3_4);
}

void aes128_expand_key_hw::thread_exitcond3_fu_607_p2() {
    exitcond3_fu_607_p2 = (!size_reg_148.read().is_01() || !ap_const_lv5_10.is_01())? sc_lv<1>(): sc_lv<1>(size_reg_148.read() == ap_const_lv5_10);
}

void aes128_expand_key_hw::thread_exitcond_fu_843_p2() {
    exitcond_fu_843_p2 = (!i_2_reg_582.read().is_01() || !ap_const_lv3_4.is_01())? sc_lv<1>(): sc_lv<1>(i_2_reg_582.read() == ap_const_lv3_4);
}

void aes128_expand_key_hw::thread_exitcond_i_fu_695_p2() {
    exitcond_i_fu_695_p2 = (!i_i_reg_379.read().is_01() || !ap_const_lv2_3.is_01())? sc_lv<1>(): sc_lv<1>(i_i_reg_379.read() == ap_const_lv2_3);
}

void aes128_expand_key_hw::thread_expanded_key_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read())) {
        expanded_key_address0 =  (sc_lv<8>) (tmp_27_fu_890_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) {
        expanded_key_address0 =  (sc_lv<8>) (tmp_24_fu_861_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        expanded_key_address0 =  (sc_lv<8>) (tmp_19_fu_676_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        expanded_key_address0 =  (sc_lv<8>) (tmp_15_fu_638_p1.read());
    } else {
        expanded_key_address0 = "XXXXXXXX";
    }
}

void aes128_expand_key_hw::thread_expanded_key_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()))) {
        expanded_key_ce0 = ap_const_logic_1;
    } else {
        expanded_key_ce0 = ap_const_logic_0;
    }
}

void aes128_expand_key_hw::thread_expanded_key_d0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read())) {
        expanded_key_d0 = tmp_26_fu_884_p2.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        expanded_key_d0 = key_load_cast_fu_633_p1.read();
    } else {
        expanded_key_d0 = "XXXXXXXX";
    }
}

void aes128_expand_key_hw::thread_expanded_key_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()))) {
        expanded_key_we0 = ap_const_logic_1;
    } else {
        expanded_key_we0 = ap_const_logic_0;
    }
}

void aes128_expand_key_hw::thread_i_10_fu_849_p2() {
    i_10_fu_849_p2 = (!i_2_reg_582.read().is_01() || !ap_const_lv3_1.is_01())? sc_lv<3>(): (sc_biguint<3>(i_2_reg_582.read()) + sc_biguint<3>(ap_const_lv3_1));
}

void aes128_expand_key_hw::thread_i_7_fu_654_p2() {
    i_7_fu_654_p2 = (!i_reg_263.read().is_01() || !ap_const_lv3_1.is_01())? sc_lv<3>(): (sc_biguint<3>(i_reg_263.read()) + sc_biguint<3>(ap_const_lv3_1));
}

void aes128_expand_key_hw::thread_i_8_fu_701_p2() {
    i_8_fu_701_p2 = (!i_i_reg_379.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<2>(): (sc_biguint<2>(i_i_reg_379.read()) + sc_biguint<2>(ap_const_lv2_1));
}

void aes128_expand_key_hw::thread_i_9_fu_782_p2() {
    i_9_fu_782_p2 = (!i_1_reg_448.read().is_01() || !ap_const_lv3_1.is_01())? sc_lv<3>(): (sc_biguint<3>(i_1_reg_448.read()) + sc_biguint<3>(ap_const_lv3_1));
}

void aes128_expand_key_hw::thread_j_5_fu_814_p0() {
    j_5_fu_814_p0 = j_fu_64.read();
}

void aes128_expand_key_hw::thread_j_5_fu_814_p2() {
    j_5_fu_814_p2 = (!j_5_fu_814_p0.read().is_01() || !ap_const_lv32_1.is_01())? sc_lv<32>(): (sc_bigint<32>(j_5_fu_814_p0.read()) + sc_biguint<32>(ap_const_lv32_1));
}

void aes128_expand_key_hw::thread_key_address0() {
    key_address0 =  (sc_lv<4>) (tmp_14_fu_619_p1.read());
}

void aes128_expand_key_hw::thread_key_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        key_ce0 = ap_const_logic_1;
    } else {
        key_ce0 = ap_const_logic_0;
    }
}

void aes128_expand_key_hw::thread_key_load_cast1_fu_629_p1() {
    key_load_cast1_fu_629_p1 = esl_sext<5,4>(key_q0.read());
}

void aes128_expand_key_hw::thread_key_load_cast_fu_633_p1() {
    key_load_cast_fu_633_p1 = esl_zext<8,5>(key_load_cast1_fu_629_p1.read());
}

void aes128_expand_key_hw::thread_rcon_hw_address0() {
    rcon_hw_address0 =  (sc_lv<8>) (tmp_20_fu_820_p1.read());
}

void aes128_expand_key_hw::thread_rcon_hw_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        rcon_hw_ce0 = ap_const_logic_1;
    } else {
        rcon_hw_ce0 = ap_const_logic_0;
    }
}

void aes128_expand_key_hw::thread_sbox_hw_address0() {
    sbox_hw_address0 =  (sc_lv<8>) (tmp_22_fu_806_p1.read());
}

void aes128_expand_key_hw::thread_sbox_hw_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        sbox_hw_ce0 = ap_const_logic_1;
    } else {
        sbox_hw_ce0 = ap_const_logic_0;
    }
}

void aes128_expand_key_hw::thread_size_3_fu_837_p2() {
    size_3_fu_837_p2 = (!size_1_reg_207.read().is_01() || !ap_const_lv8_4.is_01())? sc_lv<8>(): (sc_biguint<8>(size_1_reg_207.read()) + sc_biguint<8>(ap_const_lv8_4));
}

void aes128_expand_key_hw::thread_size_4_fu_895_p2() {
    size_4_fu_895_p2 = (!ap_const_lv8_1.is_01() || !size_2_reg_593.read().is_01())? sc_lv<8>(): (sc_biguint<8>(ap_const_lv8_1) + sc_biguint<8>(size_2_reg_593.read()));
}

void aes128_expand_key_hw::thread_tmp_0_3_fu_830_p2() {
    tmp_0_3_fu_830_p2 = (rcon_hw_q0.read() ^ tmp_0_s_reg_438.read());
}

void aes128_expand_key_hw::thread_tmp_0_4_fu_721_p3() {
    tmp_0_4_fu_721_p3 = (!write_flag_i_reg_346.read()[0].is_01())? sc_lv<8>(): ((write_flag_i_reg_346.read()[0].to_bool())? word_i_fu_68.read(): tmp_33_reg_252.read());
}

void aes128_expand_key_hw::thread_tmp_14_fu_619_p1() {
    tmp_14_fu_619_p1 = esl_zext<64,5>(size_reg_148.read());
}

void aes128_expand_key_hw::thread_tmp_15_fu_638_p1() {
    tmp_15_fu_638_p1 = esl_zext<64,5>(tmp_s_reg_904.read());
}

void aes128_expand_key_hw::thread_tmp_16_fu_642_p2() {
    tmp_16_fu_642_p2 = (!size_1_reg_207.read().is_01() || !ap_const_lv8_B0.is_01())? sc_lv<1>(): (sc_biguint<8>(size_1_reg_207.read()) < sc_biguint<8>(ap_const_lv8_B0));
}

void aes128_expand_key_hw::thread_tmp_17_fu_689_p2() {
    tmp_17_fu_689_p2 = (!tmp_29_fu_685_p1.read().is_01() || !ap_const_lv4_0.is_01())? sc_lv<1>(): sc_lv<1>(tmp_29_fu_685_p1.read() == ap_const_lv4_0);
}

void aes128_expand_key_hw::thread_tmp_18_fu_670_p2() {
    tmp_18_fu_670_p2 = (!size_1_reg_207.read().is_01() || !tmp_cast_cast_fu_666_p1.read().is_01())? sc_lv<8>(): (sc_biguint<8>(size_1_reg_207.read()) + sc_bigint<8>(tmp_cast_cast_fu_666_p1.read()));
}

void aes128_expand_key_hw::thread_tmp_19_fu_676_p1() {
    tmp_19_fu_676_p1 = esl_zext<64,8>(tmp_18_fu_670_p2.read());
}

void aes128_expand_key_hw::thread_tmp_20_fu_820_p0() {
    tmp_20_fu_820_p0 = j_fu_64.read();
}

void aes128_expand_key_hw::thread_tmp_20_fu_820_p1() {
    tmp_20_fu_820_p1 = esl_sext<64,32>(tmp_20_fu_820_p0.read());
}

void aes128_expand_key_hw::thread_tmp_21_fu_792_p5() {
    tmp_21_fu_792_p5 = i_1_reg_448.read().range(2-1, 0);
}

void aes128_expand_key_hw::thread_tmp_22_fu_806_p1() {
    tmp_22_fu_806_p1 = esl_zext<64,8>(tmp_21_fu_792_p6.read());
}

void aes128_expand_key_hw::thread_tmp_23_fu_855_p2() {
    tmp_23_fu_855_p2 = (!ap_const_lv8_F0.is_01() || !size_2_reg_593.read().is_01())? sc_lv<8>(): (sc_bigint<8>(ap_const_lv8_F0) + sc_biguint<8>(size_2_reg_593.read()));
}

void aes128_expand_key_hw::thread_tmp_24_fu_861_p1() {
    tmp_24_fu_861_p1 = esl_zext<64,8>(tmp_23_fu_855_p2.read());
}

void aes128_expand_key_hw::thread_tmp_25_fu_870_p5() {
    tmp_25_fu_870_p5 = i_2_reg_582.read().range(2-1, 0);
}

void aes128_expand_key_hw::thread_tmp_26_fu_884_p2() {
    tmp_26_fu_884_p2 = (expanded_key_q0.read() ^ tmp_25_reg_1036.read());
}

void aes128_expand_key_hw::thread_tmp_27_fu_890_p1() {
    tmp_27_fu_890_p1 = esl_zext<64,8>(size_2_reg_593.read());
}

void aes128_expand_key_hw::thread_tmp_29_fu_685_p1() {
    tmp_29_fu_685_p1 = size_1_reg_207.read().range(4-1, 0);
}

void aes128_expand_key_hw::thread_tmp_30_fu_681_p1() {
    tmp_30_fu_681_p1 = i_reg_263.read().range(2-1, 0);
}

void aes128_expand_key_hw::thread_tmp_31_fu_788_p1() {
    tmp_31_fu_788_p1 = i_1_reg_448.read().range(2-1, 0);
}

void aes128_expand_key_hw::thread_tmp_cast_cast_fu_666_p1() {
    tmp_cast_cast_fu_666_p1 = esl_sext<8,3>(tmp_fu_660_p2.read());
}

void aes128_expand_key_hw::thread_tmp_fu_660_p2() {
    tmp_fu_660_p2 = (i_reg_263.read() ^ ap_const_lv3_4);
}

void aes128_expand_key_hw::thread_tmp_s_fu_613_p2() {
    tmp_s_fu_613_p2 = (!size_reg_148.read().is_01() || !ap_const_lv5_1.is_01())? sc_lv<5>(): (sc_biguint<5>(size_reg_148.read()) + sc_biguint<5>(ap_const_lv5_1));
}

void aes128_expand_key_hw::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(exitcond3_fu_607_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state4;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 4 : 
            ap_NS_fsm = ap_ST_fsm_state2;
            break;
        case 8 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_16_fu_642_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state5;
            }
            break;
        case 16 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && esl_seteq<1,1,1>(exitcond2_fu_648_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(tmp_17_fu_689_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state8;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && esl_seteq<1,1,1>(exitcond2_fu_648_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_17_fu_689_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state13;
            } else {
                ap_NS_fsm = ap_ST_fsm_state6;
            }
            break;
        case 32 : 
            ap_NS_fsm = ap_ST_fsm_state7;
            break;
        case 64 : 
            ap_NS_fsm = ap_ST_fsm_state5;
            break;
        case 128 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, exitcond_i_fu_695_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state10;
            } else {
                ap_NS_fsm = ap_ST_fsm_state9;
            }
            break;
        case 256 : 
            ap_NS_fsm = ap_ST_fsm_state8;
            break;
        case 512 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, exitcond1_fu_776_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state13;
            } else {
                ap_NS_fsm = ap_ST_fsm_state11;
            }
            break;
        case 1024 : 
            ap_NS_fsm = ap_ST_fsm_state12;
            break;
        case 2048 : 
            ap_NS_fsm = ap_ST_fsm_state10;
            break;
        case 4096 : 
            ap_NS_fsm = ap_ST_fsm_state14;
            break;
        case 8192 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, exitcond_fu_843_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state4;
            } else {
                ap_NS_fsm = ap_ST_fsm_state15;
            }
            break;
        case 16384 : 
            ap_NS_fsm = ap_ST_fsm_state14;
            break;
        default : 
            ap_NS_fsm =  (sc_lv<15>) ("XXXXXXXXXXXXXXX");
            break;
    }
}

}

