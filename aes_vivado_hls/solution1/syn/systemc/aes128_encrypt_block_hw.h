// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _aes128_encrypt_block_hw_HH_
#define _aes128_encrypt_block_hw_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "aes128_mix_columns_h.h"
#include "aes128_expand_key_hw.h"
#include "aes128_shift_rows_hw.h"
#include "aes128_extract_round.h"
#include "aes128_add_round_key.h"
#include "aes128_expand_keycud.h"
#include "aes128_encrypt_blhbi.h"
#include "aes128_encrypt_bljbC.h"

namespace ap_rtl {

struct aes128_encrypt_block_hw : public sc_module {
    // Port declarations 20
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst_n;
    sc_in< sc_lv<8> > sin_TDATA;
    sc_in< sc_logic > sin_TVALID;
    sc_out< sc_logic > sin_TREADY;
    sc_in< sc_lv<1> > sin_TKEEP;
    sc_in< sc_lv<1> > sin_TSTRB;
    sc_in< sc_lv<1> > sin_TUSER;
    sc_in< sc_lv<1> > sin_TLAST;
    sc_in< sc_lv<1> > sin_TID;
    sc_in< sc_lv<1> > sin_TDEST;
    sc_out< sc_lv<8> > sout_TDATA;
    sc_out< sc_logic > sout_TVALID;
    sc_in< sc_logic > sout_TREADY;
    sc_out< sc_lv<1> > sout_TKEEP;
    sc_out< sc_lv<1> > sout_TSTRB;
    sc_out< sc_lv<1> > sout_TUSER;
    sc_out< sc_lv<1> > sout_TLAST;
    sc_out< sc_lv<1> > sout_TID;
    sc_out< sc_lv<1> > sout_TDEST;


    // Module declarations
    aes128_encrypt_block_hw(sc_module_name name);
    SC_HAS_PROCESS(aes128_encrypt_block_hw);

    ~aes128_encrypt_block_hw();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    aes128_expand_keycud* sbox_hw_U;
    aes128_encrypt_blhbi* state_U;
    aes128_encrypt_blhbi* round_key_U;
    aes128_encrypt_bljbC* expanded_key_U;
    aes128_mix_columns_h* grp_aes128_mix_columns_h_fu_308;
    aes128_expand_key_hw* grp_aes128_expand_key_hw_fu_313;
    aes128_shift_rows_hw* grp_aes128_shift_rows_hw_fu_324;
    aes128_extract_round* grp_aes128_extract_round_fu_329;
    aes128_add_round_key* grp_aes128_add_round_key_fu_338;
    sc_signal< sc_logic > ap_rst_n_inv;
    sc_signal< sc_lv<8> > sin_V_data_V_0_data_out;
    sc_signal< sc_logic > sin_V_data_V_0_vld_in;
    sc_signal< sc_logic > sin_V_data_V_0_vld_out;
    sc_signal< sc_logic > sin_V_data_V_0_ack_in;
    sc_signal< sc_logic > sin_V_data_V_0_ack_out;
    sc_signal< sc_lv<8> > sin_V_data_V_0_payload_A;
    sc_signal< sc_lv<8> > sin_V_data_V_0_payload_B;
    sc_signal< sc_logic > sin_V_data_V_0_sel_rd;
    sc_signal< sc_logic > sin_V_data_V_0_sel_wr;
    sc_signal< sc_logic > sin_V_data_V_0_sel;
    sc_signal< sc_logic > sin_V_data_V_0_load_A;
    sc_signal< sc_logic > sin_V_data_V_0_load_B;
    sc_signal< sc_lv<2> > sin_V_data_V_0_state;
    sc_signal< sc_logic > sin_V_data_V_0_state_cmp_full;
    sc_signal< sc_logic > sin_V_dest_V_0_vld_in;
    sc_signal< sc_logic > sin_V_dest_V_0_ack_out;
    sc_signal< sc_lv<2> > sin_V_dest_V_0_state;
    sc_signal< sc_lv<8> > sout_V_data_V_1_data_out;
    sc_signal< sc_logic > sout_V_data_V_1_vld_in;
    sc_signal< sc_logic > sout_V_data_V_1_vld_out;
    sc_signal< sc_logic > sout_V_data_V_1_ack_in;
    sc_signal< sc_logic > sout_V_data_V_1_ack_out;
    sc_signal< sc_lv<8> > sout_V_data_V_1_payload_A;
    sc_signal< sc_lv<8> > sout_V_data_V_1_payload_B;
    sc_signal< sc_logic > sout_V_data_V_1_sel_rd;
    sc_signal< sc_logic > sout_V_data_V_1_sel_wr;
    sc_signal< sc_logic > sout_V_data_V_1_sel;
    sc_signal< sc_logic > sout_V_data_V_1_load_A;
    sc_signal< sc_logic > sout_V_data_V_1_load_B;
    sc_signal< sc_lv<2> > sout_V_data_V_1_state;
    sc_signal< sc_logic > sout_V_data_V_1_state_cmp_full;
    sc_signal< sc_lv<1> > sout_V_keep_V_1_data_out;
    sc_signal< sc_logic > sout_V_keep_V_1_vld_in;
    sc_signal< sc_logic > sout_V_keep_V_1_vld_out;
    sc_signal< sc_logic > sout_V_keep_V_1_ack_in;
    sc_signal< sc_logic > sout_V_keep_V_1_ack_out;
    sc_signal< sc_logic > sout_V_keep_V_1_sel_rd;
    sc_signal< sc_logic > sout_V_keep_V_1_sel;
    sc_signal< sc_lv<2> > sout_V_keep_V_1_state;
    sc_signal< sc_lv<1> > sout_V_strb_V_1_data_out;
    sc_signal< sc_logic > sout_V_strb_V_1_vld_in;
    sc_signal< sc_logic > sout_V_strb_V_1_vld_out;
    sc_signal< sc_logic > sout_V_strb_V_1_ack_in;
    sc_signal< sc_logic > sout_V_strb_V_1_ack_out;
    sc_signal< sc_logic > sout_V_strb_V_1_sel_rd;
    sc_signal< sc_logic > sout_V_strb_V_1_sel;
    sc_signal< sc_lv<2> > sout_V_strb_V_1_state;
    sc_signal< sc_lv<1> > sout_V_user_V_1_data_out;
    sc_signal< sc_logic > sout_V_user_V_1_vld_in;
    sc_signal< sc_logic > sout_V_user_V_1_vld_out;
    sc_signal< sc_logic > sout_V_user_V_1_ack_in;
    sc_signal< sc_logic > sout_V_user_V_1_ack_out;
    sc_signal< sc_logic > sout_V_user_V_1_sel_rd;
    sc_signal< sc_logic > sout_V_user_V_1_sel;
    sc_signal< sc_lv<2> > sout_V_user_V_1_state;
    sc_signal< sc_lv<1> > sout_V_last_V_1_data_out;
    sc_signal< sc_logic > sout_V_last_V_1_vld_in;
    sc_signal< sc_logic > sout_V_last_V_1_vld_out;
    sc_signal< sc_logic > sout_V_last_V_1_ack_in;
    sc_signal< sc_logic > sout_V_last_V_1_ack_out;
    sc_signal< sc_lv<1> > sout_V_last_V_1_payload_A;
    sc_signal< sc_lv<1> > sout_V_last_V_1_payload_B;
    sc_signal< sc_logic > sout_V_last_V_1_sel_rd;
    sc_signal< sc_logic > sout_V_last_V_1_sel_wr;
    sc_signal< sc_logic > sout_V_last_V_1_sel;
    sc_signal< sc_logic > sout_V_last_V_1_load_A;
    sc_signal< sc_logic > sout_V_last_V_1_load_B;
    sc_signal< sc_lv<2> > sout_V_last_V_1_state;
    sc_signal< sc_logic > sout_V_last_V_1_state_cmp_full;
    sc_signal< sc_lv<1> > sout_V_id_V_1_data_out;
    sc_signal< sc_logic > sout_V_id_V_1_vld_in;
    sc_signal< sc_logic > sout_V_id_V_1_vld_out;
    sc_signal< sc_logic > sout_V_id_V_1_ack_in;
    sc_signal< sc_logic > sout_V_id_V_1_ack_out;
    sc_signal< sc_logic > sout_V_id_V_1_sel_rd;
    sc_signal< sc_logic > sout_V_id_V_1_sel;
    sc_signal< sc_lv<2> > sout_V_id_V_1_state;
    sc_signal< sc_lv<1> > sout_V_dest_V_1_data_out;
    sc_signal< sc_logic > sout_V_dest_V_1_vld_in;
    sc_signal< sc_logic > sout_V_dest_V_1_vld_out;
    sc_signal< sc_logic > sout_V_dest_V_1_ack_in;
    sc_signal< sc_logic > sout_V_dest_V_1_ack_out;
    sc_signal< sc_logic > sout_V_dest_V_1_sel_rd;
    sc_signal< sc_logic > sout_V_dest_V_1_sel;
    sc_signal< sc_lv<2> > sout_V_dest_V_1_state;
    sc_signal< sc_lv<8> > sbox_hw_address0;
    sc_signal< sc_logic > sbox_hw_ce0;
    sc_signal< sc_lv<8> > sbox_hw_q0;
    sc_signal< sc_logic > sin_TDATA_blk_n;
    sc_signal< sc_lv<28> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<1> > exitcond3_fu_360_p2;
    sc_signal< sc_logic > sout_TDATA_blk_n;
    sc_signal< sc_logic > ap_CS_fsm_state27;
    sc_signal< sc_logic > ap_CS_fsm_state28;
    sc_signal< sc_lv<4> > i_cast_fu_344_p1;
    sc_signal< sc_lv<4> > i_cast_reg_545;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<3> > i_11_fu_354_p2;
    sc_signal< sc_lv<3> > i_11_reg_553;
    sc_signal< sc_lv<3> > j_6_fu_366_p2;
    sc_signal< bool > ap_block_state3;
    sc_signal< sc_lv<10> > tmp_41_cast_fu_413_p1;
    sc_signal< sc_lv<10> > tmp_41_cast_reg_569;
    sc_signal< sc_logic > ap_CS_fsm_state9;
    sc_signal< sc_lv<1> > exitcond2_fu_399_p2;
    sc_signal< sc_lv<5> > i_3_fu_424_p2;
    sc_signal< sc_lv<5> > i_3_reg_577;
    sc_signal< sc_logic > ap_CS_fsm_state11;
    sc_signal< sc_lv<4> > state_addr_6_reg_582;
    sc_signal< sc_lv<1> > exitcond_i_fu_418_p2;
    sc_signal< sc_lv<4> > i_13_fu_435_p2;
    sc_signal< sc_lv<4> > i_13_reg_587;
    sc_signal< sc_logic > ap_CS_fsm_state12;
    sc_signal< sc_lv<5> > i_12_fu_452_p2;
    sc_signal< sc_lv<5> > i_12_reg_600;
    sc_signal< sc_logic > ap_CS_fsm_state19;
    sc_signal< sc_lv<4> > state_addr_5_reg_605;
    sc_signal< sc_lv<1> > exitcond_i2_fu_446_p2;
    sc_signal< sc_logic > ap_CS_fsm_state20;
    sc_signal< sc_lv<4> > i_2_cast_fu_468_p1;
    sc_signal< sc_lv<4> > i_2_cast_reg_615;
    sc_signal< sc_logic > ap_CS_fsm_state25;
    sc_signal< bool > ap_block_state25;
    sc_signal< sc_lv<3> > i_14_fu_478_p2;
    sc_signal< sc_lv<3> > i_14_reg_623;
    sc_signal< sc_lv<4> > tmp_31_fu_488_p3;
    sc_signal< sc_lv<4> > tmp_31_reg_628;
    sc_signal< sc_lv<1> > exitcond4_fu_472_p2;
    sc_signal< sc_lv<3> > j_7_fu_506_p2;
    sc_signal< sc_lv<3> > j_7_reg_636;
    sc_signal< sc_logic > ap_CS_fsm_state26;
    sc_signal< sc_lv<1> > exitcond_fu_500_p2;
    sc_signal< sc_lv<1> > tmp_last_V_fu_539_p2;
    sc_signal< sc_lv<1> > tmp_last_V_reg_646;
    sc_signal< sc_lv<8> > state_q0;
    sc_signal< sc_lv<4> > state_address0;
    sc_signal< sc_logic > state_ce0;
    sc_signal< sc_logic > state_we0;
    sc_signal< sc_lv<8> > state_d0;
    sc_signal< sc_lv<4> > round_key_address0;
    sc_signal< sc_logic > round_key_ce0;
    sc_signal< sc_logic > round_key_we0;
    sc_signal< sc_lv<8> > round_key_q0;
    sc_signal< sc_lv<8> > expanded_key_address0;
    sc_signal< sc_logic > expanded_key_ce0;
    sc_signal< sc_logic > expanded_key_we0;
    sc_signal< sc_lv<8> > expanded_key_q0;
    sc_signal< sc_logic > grp_aes128_mix_columns_h_fu_308_ap_start;
    sc_signal< sc_logic > grp_aes128_mix_columns_h_fu_308_ap_done;
    sc_signal< sc_logic > grp_aes128_mix_columns_h_fu_308_ap_idle;
    sc_signal< sc_logic > grp_aes128_mix_columns_h_fu_308_ap_ready;
    sc_signal< sc_lv<4> > grp_aes128_mix_columns_h_fu_308_state_address0;
    sc_signal< sc_logic > grp_aes128_mix_columns_h_fu_308_state_ce0;
    sc_signal< sc_logic > grp_aes128_mix_columns_h_fu_308_state_we0;
    sc_signal< sc_lv<8> > grp_aes128_mix_columns_h_fu_308_state_d0;
    sc_signal< sc_logic > grp_aes128_expand_key_hw_fu_313_ap_start;
    sc_signal< sc_logic > grp_aes128_expand_key_hw_fu_313_ap_done;
    sc_signal< sc_logic > grp_aes128_expand_key_hw_fu_313_ap_idle;
    sc_signal< sc_logic > grp_aes128_expand_key_hw_fu_313_ap_ready;
    sc_signal< sc_lv<8> > grp_aes128_expand_key_hw_fu_313_expanded_key_address0;
    sc_signal< sc_logic > grp_aes128_expand_key_hw_fu_313_expanded_key_ce0;
    sc_signal< sc_logic > grp_aes128_expand_key_hw_fu_313_expanded_key_we0;
    sc_signal< sc_lv<8> > grp_aes128_expand_key_hw_fu_313_expanded_key_d0;
    sc_signal< sc_logic > grp_aes128_shift_rows_hw_fu_324_ap_start;
    sc_signal< sc_logic > grp_aes128_shift_rows_hw_fu_324_ap_done;
    sc_signal< sc_logic > grp_aes128_shift_rows_hw_fu_324_ap_idle;
    sc_signal< sc_logic > grp_aes128_shift_rows_hw_fu_324_ap_ready;
    sc_signal< sc_lv<4> > grp_aes128_shift_rows_hw_fu_324_state_address0;
    sc_signal< sc_logic > grp_aes128_shift_rows_hw_fu_324_state_ce0;
    sc_signal< sc_logic > grp_aes128_shift_rows_hw_fu_324_state_we0;
    sc_signal< sc_lv<8> > grp_aes128_shift_rows_hw_fu_324_state_d0;
    sc_signal< sc_logic > grp_aes128_extract_round_fu_329_ap_start;
    sc_signal< sc_logic > grp_aes128_extract_round_fu_329_ap_done;
    sc_signal< sc_logic > grp_aes128_extract_round_fu_329_ap_idle;
    sc_signal< sc_logic > grp_aes128_extract_round_fu_329_ap_ready;
    sc_signal< sc_lv<8> > grp_aes128_extract_round_fu_329_expanded_key_address0;
    sc_signal< sc_logic > grp_aes128_extract_round_fu_329_expanded_key_ce0;
    sc_signal< sc_lv<10> > grp_aes128_extract_round_fu_329_expanded_key_offset;
    sc_signal< sc_lv<4> > grp_aes128_extract_round_fu_329_round_key_address0;
    sc_signal< sc_logic > grp_aes128_extract_round_fu_329_round_key_ce0;
    sc_signal< sc_logic > grp_aes128_extract_round_fu_329_round_key_we0;
    sc_signal< sc_lv<8> > grp_aes128_extract_round_fu_329_round_key_d0;
    sc_signal< sc_logic > grp_aes128_add_round_key_fu_338_ap_start;
    sc_signal< sc_logic > grp_aes128_add_round_key_fu_338_ap_done;
    sc_signal< sc_logic > grp_aes128_add_round_key_fu_338_ap_idle;
    sc_signal< sc_logic > grp_aes128_add_round_key_fu_338_ap_ready;
    sc_signal< sc_lv<4> > grp_aes128_add_round_key_fu_338_state_address0;
    sc_signal< sc_logic > grp_aes128_add_round_key_fu_338_state_ce0;
    sc_signal< sc_logic > grp_aes128_add_round_key_fu_338_state_we0;
    sc_signal< sc_lv<8> > grp_aes128_add_round_key_fu_338_state_d0;
    sc_signal< sc_lv<4> > grp_aes128_add_round_key_fu_338_round_key_address0;
    sc_signal< sc_logic > grp_aes128_add_round_key_fu_338_round_key_ce0;
    sc_signal< sc_lv<3> > i_reg_230;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<3> > j_reg_241;
    sc_signal< sc_lv<1> > exitcond1_fu_348_p2;
    sc_signal< sc_lv<4> > i_1_reg_252;
    sc_signal< sc_logic > ap_CS_fsm_state8;
    sc_signal< sc_logic > ap_CS_fsm_state18;
    sc_signal< sc_lv<5> > i_i_reg_264;
    sc_signal< sc_logic > ap_CS_fsm_state10;
    sc_signal< sc_logic > ap_CS_fsm_state13;
    sc_signal< sc_lv<5> > i_i1_reg_275;
    sc_signal< sc_logic > ap_CS_fsm_state21;
    sc_signal< sc_lv<3> > i_2_reg_286;
    sc_signal< sc_logic > ap_CS_fsm_state24;
    sc_signal< sc_lv<3> > j_1_reg_297;
    sc_signal< sc_logic > grp_aes128_mix_columns_h_fu_308_ap_start_reg;
    sc_signal< sc_logic > ap_CS_fsm_state15;
    sc_signal< sc_logic > ap_CS_fsm_state16;
    sc_signal< sc_logic > grp_aes128_expand_key_hw_fu_313_ap_start_reg;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_logic > grp_aes128_shift_rows_hw_fu_324_ap_start_reg;
    sc_signal< sc_logic > ap_CS_fsm_state14;
    sc_signal< sc_logic > ap_CS_fsm_state22;
    sc_signal< sc_logic > grp_aes128_extract_round_fu_329_ap_start_reg;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_logic > ap_CS_fsm_state6;
    sc_signal< sc_logic > grp_aes128_add_round_key_fu_338_ap_start_reg;
    sc_signal< sc_logic > ap_CS_fsm_state7;
    sc_signal< sc_logic > ap_CS_fsm_state17;
    sc_signal< sc_logic > ap_CS_fsm_state23;
    sc_signal< sc_lv<64> > tmp_30_fu_394_p1;
    sc_signal< sc_lv<64> > tmp_i_fu_430_p1;
    sc_signal< sc_lv<64> > tmp_i_20_fu_441_p1;
    sc_signal< sc_lv<64> > tmp_i3_fu_458_p1;
    sc_signal< sc_lv<64> > tmp_i6_fu_463_p1;
    sc_signal< sc_lv<64> > tmp_34_fu_529_p1;
    sc_signal< sc_lv<2> > tmp_fu_377_p1;
    sc_signal< sc_lv<4> > tmp_28_fu_381_p3;
    sc_signal< sc_lv<4> > tmp_29_fu_389_p2;
    sc_signal< sc_lv<8> > tmp_s_fu_405_p3;
    sc_signal< sc_lv<2> > tmp_36_fu_484_p1;
    sc_signal< sc_lv<2> > tmp_37_fu_512_p1;
    sc_signal< sc_lv<4> > tmp_32_fu_516_p3;
    sc_signal< sc_lv<4> > tmp_33_fu_524_p2;
    sc_signal< sc_lv<4> > j_1_cast_fu_496_p1;
    sc_signal< sc_lv<4> > tmp_35_fu_534_p2;
    sc_signal< sc_lv<28> > ap_NS_fsm;
    sc_signal< bool > ap_block_state22_on_subcall_done;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<28> ap_ST_fsm_state1;
    static const sc_lv<28> ap_ST_fsm_state2;
    static const sc_lv<28> ap_ST_fsm_state3;
    static const sc_lv<28> ap_ST_fsm_state4;
    static const sc_lv<28> ap_ST_fsm_state5;
    static const sc_lv<28> ap_ST_fsm_state6;
    static const sc_lv<28> ap_ST_fsm_state7;
    static const sc_lv<28> ap_ST_fsm_state8;
    static const sc_lv<28> ap_ST_fsm_state9;
    static const sc_lv<28> ap_ST_fsm_state10;
    static const sc_lv<28> ap_ST_fsm_state11;
    static const sc_lv<28> ap_ST_fsm_state12;
    static const sc_lv<28> ap_ST_fsm_state13;
    static const sc_lv<28> ap_ST_fsm_state14;
    static const sc_lv<28> ap_ST_fsm_state15;
    static const sc_lv<28> ap_ST_fsm_state16;
    static const sc_lv<28> ap_ST_fsm_state17;
    static const sc_lv<28> ap_ST_fsm_state18;
    static const sc_lv<28> ap_ST_fsm_state19;
    static const sc_lv<28> ap_ST_fsm_state20;
    static const sc_lv<28> ap_ST_fsm_state21;
    static const sc_lv<28> ap_ST_fsm_state22;
    static const sc_lv<28> ap_ST_fsm_state23;
    static const sc_lv<28> ap_ST_fsm_state24;
    static const sc_lv<28> ap_ST_fsm_state25;
    static const sc_lv<28> ap_ST_fsm_state26;
    static const sc_lv<28> ap_ST_fsm_state27;
    static const sc_lv<28> ap_ST_fsm_state28;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<2> ap_const_lv2_2;
    static const sc_lv<2> ap_const_lv2_3;
    static const sc_lv<2> ap_const_lv2_1;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_1A;
    static const sc_lv<32> ap_const_lv32_1B;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<32> ap_const_lv32_8;
    static const sc_lv<32> ap_const_lv32_A;
    static const sc_lv<32> ap_const_lv32_B;
    static const sc_lv<32> ap_const_lv32_12;
    static const sc_lv<32> ap_const_lv32_13;
    static const sc_lv<32> ap_const_lv32_18;
    static const sc_lv<32> ap_const_lv32_19;
    static const sc_lv<3> ap_const_lv3_0;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<4> ap_const_lv4_1;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<32> ap_const_lv32_11;
    static const sc_lv<5> ap_const_lv5_0;
    static const sc_lv<32> ap_const_lv32_9;
    static const sc_lv<32> ap_const_lv32_C;
    static const sc_lv<32> ap_const_lv32_14;
    static const sc_lv<32> ap_const_lv32_17;
    static const sc_lv<32> ap_const_lv32_E;
    static const sc_lv<32> ap_const_lv32_F;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_D;
    static const sc_lv<32> ap_const_lv32_15;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<10> ap_const_lv10_0;
    static const sc_lv<10> ap_const_lv10_A0;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<32> ap_const_lv32_10;
    static const sc_lv<32> ap_const_lv32_16;
    static const sc_lv<3> ap_const_lv3_4;
    static const sc_lv<3> ap_const_lv3_1;
    static const sc_lv<4> ap_const_lv4_A;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_lv<5> ap_const_lv5_10;
    static const sc_lv<5> ap_const_lv5_1;
    static const sc_lv<4> ap_const_lv4_F;
    static const bool ap_const_boolean_0;
    static const sc_lv<8> ap_const_lv8_0;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state10();
    void thread_ap_CS_fsm_state11();
    void thread_ap_CS_fsm_state12();
    void thread_ap_CS_fsm_state13();
    void thread_ap_CS_fsm_state14();
    void thread_ap_CS_fsm_state15();
    void thread_ap_CS_fsm_state16();
    void thread_ap_CS_fsm_state17();
    void thread_ap_CS_fsm_state18();
    void thread_ap_CS_fsm_state19();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state20();
    void thread_ap_CS_fsm_state21();
    void thread_ap_CS_fsm_state22();
    void thread_ap_CS_fsm_state23();
    void thread_ap_CS_fsm_state24();
    void thread_ap_CS_fsm_state25();
    void thread_ap_CS_fsm_state26();
    void thread_ap_CS_fsm_state27();
    void thread_ap_CS_fsm_state28();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state5();
    void thread_ap_CS_fsm_state6();
    void thread_ap_CS_fsm_state7();
    void thread_ap_CS_fsm_state8();
    void thread_ap_CS_fsm_state9();
    void thread_ap_block_state22_on_subcall_done();
    void thread_ap_block_state25();
    void thread_ap_block_state3();
    void thread_ap_rst_n_inv();
    void thread_exitcond1_fu_348_p2();
    void thread_exitcond2_fu_399_p2();
    void thread_exitcond3_fu_360_p2();
    void thread_exitcond4_fu_472_p2();
    void thread_exitcond_fu_500_p2();
    void thread_exitcond_i2_fu_446_p2();
    void thread_exitcond_i_fu_418_p2();
    void thread_expanded_key_address0();
    void thread_expanded_key_ce0();
    void thread_expanded_key_we0();
    void thread_grp_aes128_add_round_key_fu_338_ap_start();
    void thread_grp_aes128_expand_key_hw_fu_313_ap_start();
    void thread_grp_aes128_extract_round_fu_329_ap_start();
    void thread_grp_aes128_extract_round_fu_329_expanded_key_offset();
    void thread_grp_aes128_mix_columns_h_fu_308_ap_start();
    void thread_grp_aes128_shift_rows_hw_fu_324_ap_start();
    void thread_i_11_fu_354_p2();
    void thread_i_12_fu_452_p2();
    void thread_i_13_fu_435_p2();
    void thread_i_14_fu_478_p2();
    void thread_i_2_cast_fu_468_p1();
    void thread_i_3_fu_424_p2();
    void thread_i_cast_fu_344_p1();
    void thread_j_1_cast_fu_496_p1();
    void thread_j_6_fu_366_p2();
    void thread_j_7_fu_506_p2();
    void thread_round_key_address0();
    void thread_round_key_ce0();
    void thread_round_key_we0();
    void thread_sbox_hw_address0();
    void thread_sbox_hw_ce0();
    void thread_sin_TDATA_blk_n();
    void thread_sin_TREADY();
    void thread_sin_V_data_V_0_ack_in();
    void thread_sin_V_data_V_0_ack_out();
    void thread_sin_V_data_V_0_data_out();
    void thread_sin_V_data_V_0_load_A();
    void thread_sin_V_data_V_0_load_B();
    void thread_sin_V_data_V_0_sel();
    void thread_sin_V_data_V_0_state_cmp_full();
    void thread_sin_V_data_V_0_vld_in();
    void thread_sin_V_data_V_0_vld_out();
    void thread_sin_V_dest_V_0_ack_out();
    void thread_sin_V_dest_V_0_vld_in();
    void thread_sout_TDATA();
    void thread_sout_TDATA_blk_n();
    void thread_sout_TDEST();
    void thread_sout_TID();
    void thread_sout_TKEEP();
    void thread_sout_TLAST();
    void thread_sout_TSTRB();
    void thread_sout_TUSER();
    void thread_sout_TVALID();
    void thread_sout_V_data_V_1_ack_in();
    void thread_sout_V_data_V_1_ack_out();
    void thread_sout_V_data_V_1_data_out();
    void thread_sout_V_data_V_1_load_A();
    void thread_sout_V_data_V_1_load_B();
    void thread_sout_V_data_V_1_sel();
    void thread_sout_V_data_V_1_state_cmp_full();
    void thread_sout_V_data_V_1_vld_in();
    void thread_sout_V_data_V_1_vld_out();
    void thread_sout_V_dest_V_1_ack_in();
    void thread_sout_V_dest_V_1_ack_out();
    void thread_sout_V_dest_V_1_data_out();
    void thread_sout_V_dest_V_1_sel();
    void thread_sout_V_dest_V_1_vld_in();
    void thread_sout_V_dest_V_1_vld_out();
    void thread_sout_V_id_V_1_ack_in();
    void thread_sout_V_id_V_1_ack_out();
    void thread_sout_V_id_V_1_data_out();
    void thread_sout_V_id_V_1_sel();
    void thread_sout_V_id_V_1_vld_in();
    void thread_sout_V_id_V_1_vld_out();
    void thread_sout_V_keep_V_1_ack_in();
    void thread_sout_V_keep_V_1_ack_out();
    void thread_sout_V_keep_V_1_data_out();
    void thread_sout_V_keep_V_1_sel();
    void thread_sout_V_keep_V_1_vld_in();
    void thread_sout_V_keep_V_1_vld_out();
    void thread_sout_V_last_V_1_ack_in();
    void thread_sout_V_last_V_1_ack_out();
    void thread_sout_V_last_V_1_data_out();
    void thread_sout_V_last_V_1_load_A();
    void thread_sout_V_last_V_1_load_B();
    void thread_sout_V_last_V_1_sel();
    void thread_sout_V_last_V_1_state_cmp_full();
    void thread_sout_V_last_V_1_vld_in();
    void thread_sout_V_last_V_1_vld_out();
    void thread_sout_V_strb_V_1_ack_in();
    void thread_sout_V_strb_V_1_ack_out();
    void thread_sout_V_strb_V_1_data_out();
    void thread_sout_V_strb_V_1_sel();
    void thread_sout_V_strb_V_1_vld_in();
    void thread_sout_V_strb_V_1_vld_out();
    void thread_sout_V_user_V_1_ack_in();
    void thread_sout_V_user_V_1_ack_out();
    void thread_sout_V_user_V_1_data_out();
    void thread_sout_V_user_V_1_sel();
    void thread_sout_V_user_V_1_vld_in();
    void thread_sout_V_user_V_1_vld_out();
    void thread_state_address0();
    void thread_state_ce0();
    void thread_state_d0();
    void thread_state_we0();
    void thread_tmp_28_fu_381_p3();
    void thread_tmp_29_fu_389_p2();
    void thread_tmp_30_fu_394_p1();
    void thread_tmp_31_fu_488_p3();
    void thread_tmp_32_fu_516_p3();
    void thread_tmp_33_fu_524_p2();
    void thread_tmp_34_fu_529_p1();
    void thread_tmp_35_fu_534_p2();
    void thread_tmp_36_fu_484_p1();
    void thread_tmp_37_fu_512_p1();
    void thread_tmp_41_cast_fu_413_p1();
    void thread_tmp_fu_377_p1();
    void thread_tmp_i3_fu_458_p1();
    void thread_tmp_i6_fu_463_p1();
    void thread_tmp_i_20_fu_441_p1();
    void thread_tmp_i_fu_430_p1();
    void thread_tmp_last_V_fu_539_p2();
    void thread_tmp_s_fu_405_p3();
    void thread_ap_NS_fsm();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
