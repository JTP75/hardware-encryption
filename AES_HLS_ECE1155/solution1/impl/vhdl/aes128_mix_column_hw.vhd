-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2018.3
-- Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity aes128_mix_column_hw is
port (
    ap_ready : OUT STD_LOGIC;
    column_0_read : IN STD_LOGIC_VECTOR (7 downto 0);
    column_1_read : IN STD_LOGIC_VECTOR (7 downto 0);
    column_2_read : IN STD_LOGIC_VECTOR (7 downto 0);
    column_3_read : IN STD_LOGIC_VECTOR (7 downto 0);
    ap_return_0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ap_return_1 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ap_return_2 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ap_return_3 : OUT STD_LOGIC_VECTOR (7 downto 0) );
end;


architecture behav of aes128_mix_column_hw is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv3_2 : STD_LOGIC_VECTOR (2 downto 0) := "010";
    constant ap_const_lv3_3 : STD_LOGIC_VECTOR (2 downto 0) := "011";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_logic_0 : STD_LOGIC := '0';

    signal tmp_gmul_hw_fu_44_ap_ready : STD_LOGIC;
    signal tmp_gmul_hw_fu_44_ap_return : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_s_gmul_hw_fu_52_ap_ready : STD_LOGIC;
    signal tmp_s_gmul_hw_fu_52_ap_return : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_9_gmul_hw_fu_60_ap_ready : STD_LOGIC;
    signal tmp_9_gmul_hw_fu_60_ap_return : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_1_gmul_hw_fu_68_ap_ready : STD_LOGIC;
    signal tmp_1_gmul_hw_fu_68_ap_return : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_4_gmul_hw_fu_76_ap_ready : STD_LOGIC;
    signal tmp_4_gmul_hw_fu_76_ap_return : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_5_gmul_hw_fu_84_ap_ready : STD_LOGIC;
    signal tmp_5_gmul_hw_fu_84_ap_return : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_6_gmul_hw_fu_92_ap_ready : STD_LOGIC;
    signal tmp_6_gmul_hw_fu_92_ap_return : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_2_gmul_hw_fu_100_ap_ready : STD_LOGIC;
    signal tmp_2_gmul_hw_fu_100_ap_return : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_3_gmul_hw_fu_108_ap_ready : STD_LOGIC;
    signal tmp_3_gmul_hw_fu_108_ap_return : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_7_gmul_hw_fu_116_ap_ready : STD_LOGIC;
    signal tmp_7_gmul_hw_fu_116_ap_return : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_8_gmul_hw_fu_124_ap_ready : STD_LOGIC;
    signal tmp_8_gmul_hw_fu_124_ap_return : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_10_gmul_hw_fu_132_ap_ready : STD_LOGIC;
    signal tmp_10_gmul_hw_fu_132_ap_return : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp2_fu_146_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp1_fu_140_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp4_fu_164_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp3_fu_158_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp6_fu_182_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp5_fu_176_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp8_fu_200_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp7_fu_194_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal column_0_write_assi_fu_152_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal column_1_write_assi_fu_170_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal column_2_write_assi_fu_188_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal column_3_write_assi_fu_206_p2 : STD_LOGIC_VECTOR (7 downto 0);

    component gmul_hw IS
    port (
        ap_ready : OUT STD_LOGIC;
        a : IN STD_LOGIC_VECTOR (7 downto 0);
        b : IN STD_LOGIC_VECTOR (2 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;



begin
    tmp_gmul_hw_fu_44 : component gmul_hw
    port map (
        ap_ready => tmp_gmul_hw_fu_44_ap_ready,
        a => column_0_read,
        b => ap_const_lv3_2,
        ap_return => tmp_gmul_hw_fu_44_ap_return);

    tmp_s_gmul_hw_fu_52 : component gmul_hw
    port map (
        ap_ready => tmp_s_gmul_hw_fu_52_ap_ready,
        a => column_1_read,
        b => ap_const_lv3_3,
        ap_return => tmp_s_gmul_hw_fu_52_ap_return);

    tmp_9_gmul_hw_fu_60 : component gmul_hw
    port map (
        ap_ready => tmp_9_gmul_hw_fu_60_ap_ready,
        a => column_2_read,
        b => ap_const_lv3_1,
        ap_return => tmp_9_gmul_hw_fu_60_ap_return);

    tmp_1_gmul_hw_fu_68 : component gmul_hw
    port map (
        ap_ready => tmp_1_gmul_hw_fu_68_ap_ready,
        a => column_3_read,
        b => ap_const_lv3_1,
        ap_return => tmp_1_gmul_hw_fu_68_ap_return);

    tmp_4_gmul_hw_fu_76 : component gmul_hw
    port map (
        ap_ready => tmp_4_gmul_hw_fu_76_ap_ready,
        a => column_0_read,
        b => ap_const_lv3_1,
        ap_return => tmp_4_gmul_hw_fu_76_ap_return);

    tmp_5_gmul_hw_fu_84 : component gmul_hw
    port map (
        ap_ready => tmp_5_gmul_hw_fu_84_ap_ready,
        a => column_1_read,
        b => ap_const_lv3_2,
        ap_return => tmp_5_gmul_hw_fu_84_ap_return);

    tmp_6_gmul_hw_fu_92 : component gmul_hw
    port map (
        ap_ready => tmp_6_gmul_hw_fu_92_ap_ready,
        a => column_2_read,
        b => ap_const_lv3_3,
        ap_return => tmp_6_gmul_hw_fu_92_ap_return);

    tmp_2_gmul_hw_fu_100 : component gmul_hw
    port map (
        ap_ready => tmp_2_gmul_hw_fu_100_ap_ready,
        a => column_1_read,
        b => ap_const_lv3_1,
        ap_return => tmp_2_gmul_hw_fu_100_ap_return);

    tmp_3_gmul_hw_fu_108 : component gmul_hw
    port map (
        ap_ready => tmp_3_gmul_hw_fu_108_ap_ready,
        a => column_2_read,
        b => ap_const_lv3_2,
        ap_return => tmp_3_gmul_hw_fu_108_ap_return);

    tmp_7_gmul_hw_fu_116 : component gmul_hw
    port map (
        ap_ready => tmp_7_gmul_hw_fu_116_ap_ready,
        a => column_3_read,
        b => ap_const_lv3_3,
        ap_return => tmp_7_gmul_hw_fu_116_ap_return);

    tmp_8_gmul_hw_fu_124 : component gmul_hw
    port map (
        ap_ready => tmp_8_gmul_hw_fu_124_ap_ready,
        a => column_0_read,
        b => ap_const_lv3_3,
        ap_return => tmp_8_gmul_hw_fu_124_ap_return);

    tmp_10_gmul_hw_fu_132 : component gmul_hw
    port map (
        ap_ready => tmp_10_gmul_hw_fu_132_ap_ready,
        a => column_3_read,
        b => ap_const_lv3_2,
        ap_return => tmp_10_gmul_hw_fu_132_ap_return);




    ap_ready <= ap_const_logic_1;
    ap_return_0 <= column_0_write_assi_fu_152_p2;
    ap_return_1 <= column_1_write_assi_fu_170_p2;
    ap_return_2 <= column_2_write_assi_fu_188_p2;
    ap_return_3 <= column_3_write_assi_fu_206_p2;
    column_0_write_assi_fu_152_p2 <= (tmp2_fu_146_p2 xor tmp1_fu_140_p2);
    column_1_write_assi_fu_170_p2 <= (tmp4_fu_164_p2 xor tmp3_fu_158_p2);
    column_2_write_assi_fu_188_p2 <= (tmp6_fu_182_p2 xor tmp5_fu_176_p2);
    column_3_write_assi_fu_206_p2 <= (tmp8_fu_200_p2 xor tmp7_fu_194_p2);
    tmp1_fu_140_p2 <= (tmp_s_gmul_hw_fu_52_ap_return xor tmp_gmul_hw_fu_44_ap_return);
    tmp2_fu_146_p2 <= (tmp_9_gmul_hw_fu_60_ap_return xor tmp_1_gmul_hw_fu_68_ap_return);
    tmp3_fu_158_p2 <= (tmp_5_gmul_hw_fu_84_ap_return xor tmp_4_gmul_hw_fu_76_ap_return);
    tmp4_fu_164_p2 <= (tmp_6_gmul_hw_fu_92_ap_return xor tmp_1_gmul_hw_fu_68_ap_return);
    tmp5_fu_176_p2 <= (tmp_4_gmul_hw_fu_76_ap_return xor tmp_2_gmul_hw_fu_100_ap_return);
    tmp6_fu_182_p2 <= (tmp_7_gmul_hw_fu_116_ap_return xor tmp_3_gmul_hw_fu_108_ap_return);
    tmp7_fu_194_p2 <= (tmp_8_gmul_hw_fu_124_ap_return xor tmp_2_gmul_hw_fu_100_ap_return);
    tmp8_fu_200_p2 <= (tmp_9_gmul_hw_fu_60_ap_return xor tmp_10_gmul_hw_fu_132_ap_return);
end behav;
