// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _aes128_encrypt_block_hw_HH_
#define _aes128_encrypt_block_hw_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "aes128_mix_columns_h.h"
#include "aes128_expand_key_hw.h"
#include "aes128_shift_rows_hw.h"
#include "aes128_extract_round.h"
#include "aes128_add_round_key.h"
#include "aes128_expand_keybkb.h"
#include "aes128_encrypt_blg8j.h"
#include "aes128_encrypt_blibs.h"

namespace ap_rtl {

struct aes128_encrypt_block_hw : public sc_module {
    // Port declarations 16
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<4> > in_r_address0;
    sc_out< sc_logic > in_r_ce0;
    sc_in< sc_lv<8> > in_r_q0;
    sc_out< sc_lv<4> > key_address0;
    sc_out< sc_logic > key_ce0;
    sc_in< sc_lv<8> > key_q0;
    sc_out< sc_lv<4> > out_r_address0;
    sc_out< sc_logic > out_r_ce0;
    sc_out< sc_logic > out_r_we0;
    sc_out< sc_lv<8> > out_r_d0;


    // Module declarations
    aes128_encrypt_block_hw(sc_module_name name);
    SC_HAS_PROCESS(aes128_encrypt_block_hw);

    ~aes128_encrypt_block_hw();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    aes128_expand_keybkb* sbox_hw_U;
    aes128_encrypt_blg8j* state_U;
    aes128_encrypt_blg8j* round_key_U;
    aes128_encrypt_blibs* expanded_key_U;
    aes128_mix_columns_h* grp_aes128_mix_columns_h_fu_239;
    aes128_expand_key_hw* grp_aes128_expand_key_hw_fu_244;
    aes128_shift_rows_hw* grp_aes128_shift_rows_hw_fu_255;
    aes128_extract_round* grp_aes128_extract_round_fu_260;
    aes128_add_round_key* grp_aes128_add_round_key_fu_269;
    sc_signal< sc_lv<28> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<8> > sbox_hw_address0;
    sc_signal< sc_logic > sbox_hw_ce0;
    sc_signal< sc_lv<8> > sbox_hw_q0;
    sc_signal< sc_lv<4> > i_cast_fu_275_p1;
    sc_signal< sc_lv<4> > i_cast_reg_494;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<3> > i_11_fu_285_p2;
    sc_signal< sc_lv<3> > i_11_reg_502;
    sc_signal< sc_lv<4> > tmp_fu_295_p3;
    sc_signal< sc_lv<4> > tmp_reg_507;
    sc_signal< sc_lv<1> > exitcond4_fu_279_p2;
    sc_signal< sc_lv<3> > j_6_fu_313_p2;
    sc_signal< sc_lv<3> > j_6_reg_515;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<1> > exitcond3_fu_307_p2;
    sc_signal< sc_lv<4> > tmp_31_fu_341_p2;
    sc_signal< sc_lv<4> > tmp_31_reg_525;
    sc_signal< sc_lv<10> > tmp_41_cast_fu_364_p1;
    sc_signal< sc_lv<10> > tmp_41_cast_reg_533;
    sc_signal< sc_logic > ap_CS_fsm_state10;
    sc_signal< sc_lv<1> > exitcond2_fu_350_p2;
    sc_signal< sc_lv<5> > i_3_fu_375_p2;
    sc_signal< sc_lv<5> > i_3_reg_541;
    sc_signal< sc_logic > ap_CS_fsm_state12;
    sc_signal< sc_lv<4> > state_addr_6_reg_546;
    sc_signal< sc_lv<1> > exitcond_i_fu_369_p2;
    sc_signal< sc_lv<4> > i_13_fu_386_p2;
    sc_signal< sc_lv<4> > i_13_reg_551;
    sc_signal< sc_logic > ap_CS_fsm_state13;
    sc_signal< sc_lv<5> > i_12_fu_403_p2;
    sc_signal< sc_lv<5> > i_12_reg_564;
    sc_signal< sc_logic > ap_CS_fsm_state20;
    sc_signal< sc_lv<4> > state_addr_5_reg_569;
    sc_signal< sc_lv<1> > exitcond_i7_fu_397_p2;
    sc_signal< sc_logic > ap_CS_fsm_state21;
    sc_signal< sc_lv<4> > i_2_cast_fu_419_p1;
    sc_signal< sc_lv<4> > i_2_cast_reg_579;
    sc_signal< sc_logic > ap_CS_fsm_state26;
    sc_signal< sc_lv<3> > i_14_fu_429_p2;
    sc_signal< sc_lv<3> > i_14_reg_587;
    sc_signal< sc_lv<4> > tmp_33_fu_439_p3;
    sc_signal< sc_lv<4> > tmp_33_reg_592;
    sc_signal< sc_lv<1> > exitcond1_fu_423_p2;
    sc_signal< sc_lv<3> > j_7_fu_457_p2;
    sc_signal< sc_lv<3> > j_7_reg_600;
    sc_signal< sc_logic > ap_CS_fsm_state27;
    sc_signal< sc_lv<1> > exitcond_fu_451_p2;
    sc_signal< sc_lv<4> > tmp_37_fu_485_p2;
    sc_signal< sc_lv<4> > tmp_37_reg_610;
    sc_signal< sc_lv<4> > state_address0;
    sc_signal< sc_logic > state_ce0;
    sc_signal< sc_logic > state_we0;
    sc_signal< sc_lv<8> > state_d0;
    sc_signal< sc_lv<8> > state_q0;
    sc_signal< sc_lv<4> > round_key_address0;
    sc_signal< sc_logic > round_key_ce0;
    sc_signal< sc_logic > round_key_we0;
    sc_signal< sc_lv<8> > round_key_q0;
    sc_signal< sc_lv<8> > expanded_key_address0;
    sc_signal< sc_logic > expanded_key_ce0;
    sc_signal< sc_logic > expanded_key_we0;
    sc_signal< sc_lv<8> > expanded_key_q0;
    sc_signal< sc_logic > grp_aes128_mix_columns_h_fu_239_ap_start;
    sc_signal< sc_logic > grp_aes128_mix_columns_h_fu_239_ap_done;
    sc_signal< sc_logic > grp_aes128_mix_columns_h_fu_239_ap_idle;
    sc_signal< sc_logic > grp_aes128_mix_columns_h_fu_239_ap_ready;
    sc_signal< sc_lv<4> > grp_aes128_mix_columns_h_fu_239_state_address0;
    sc_signal< sc_logic > grp_aes128_mix_columns_h_fu_239_state_ce0;
    sc_signal< sc_logic > grp_aes128_mix_columns_h_fu_239_state_we0;
    sc_signal< sc_lv<8> > grp_aes128_mix_columns_h_fu_239_state_d0;
    sc_signal< sc_logic > grp_aes128_expand_key_hw_fu_244_ap_start;
    sc_signal< sc_logic > grp_aes128_expand_key_hw_fu_244_ap_done;
    sc_signal< sc_logic > grp_aes128_expand_key_hw_fu_244_ap_idle;
    sc_signal< sc_logic > grp_aes128_expand_key_hw_fu_244_ap_ready;
    sc_signal< sc_lv<4> > grp_aes128_expand_key_hw_fu_244_key_address0;
    sc_signal< sc_logic > grp_aes128_expand_key_hw_fu_244_key_ce0;
    sc_signal< sc_lv<8> > grp_aes128_expand_key_hw_fu_244_expanded_key_address0;
    sc_signal< sc_logic > grp_aes128_expand_key_hw_fu_244_expanded_key_ce0;
    sc_signal< sc_logic > grp_aes128_expand_key_hw_fu_244_expanded_key_we0;
    sc_signal< sc_lv<8> > grp_aes128_expand_key_hw_fu_244_expanded_key_d0;
    sc_signal< sc_logic > grp_aes128_shift_rows_hw_fu_255_ap_start;
    sc_signal< sc_logic > grp_aes128_shift_rows_hw_fu_255_ap_done;
    sc_signal< sc_logic > grp_aes128_shift_rows_hw_fu_255_ap_idle;
    sc_signal< sc_logic > grp_aes128_shift_rows_hw_fu_255_ap_ready;
    sc_signal< sc_lv<4> > grp_aes128_shift_rows_hw_fu_255_state_address0;
    sc_signal< sc_logic > grp_aes128_shift_rows_hw_fu_255_state_ce0;
    sc_signal< sc_logic > grp_aes128_shift_rows_hw_fu_255_state_we0;
    sc_signal< sc_lv<8> > grp_aes128_shift_rows_hw_fu_255_state_d0;
    sc_signal< sc_logic > grp_aes128_extract_round_fu_260_ap_start;
    sc_signal< sc_logic > grp_aes128_extract_round_fu_260_ap_done;
    sc_signal< sc_logic > grp_aes128_extract_round_fu_260_ap_idle;
    sc_signal< sc_logic > grp_aes128_extract_round_fu_260_ap_ready;
    sc_signal< sc_lv<8> > grp_aes128_extract_round_fu_260_expanded_key_address0;
    sc_signal< sc_logic > grp_aes128_extract_round_fu_260_expanded_key_ce0;
    sc_signal< sc_lv<10> > grp_aes128_extract_round_fu_260_expanded_key_offset;
    sc_signal< sc_lv<4> > grp_aes128_extract_round_fu_260_round_key_address0;
    sc_signal< sc_logic > grp_aes128_extract_round_fu_260_round_key_ce0;
    sc_signal< sc_logic > grp_aes128_extract_round_fu_260_round_key_we0;
    sc_signal< sc_lv<8> > grp_aes128_extract_round_fu_260_round_key_d0;
    sc_signal< sc_logic > grp_aes128_add_round_key_fu_269_ap_start;
    sc_signal< sc_logic > grp_aes128_add_round_key_fu_269_ap_done;
    sc_signal< sc_logic > grp_aes128_add_round_key_fu_269_ap_idle;
    sc_signal< sc_logic > grp_aes128_add_round_key_fu_269_ap_ready;
    sc_signal< sc_lv<4> > grp_aes128_add_round_key_fu_269_state_address0;
    sc_signal< sc_logic > grp_aes128_add_round_key_fu_269_state_ce0;
    sc_signal< sc_logic > grp_aes128_add_round_key_fu_269_state_we0;
    sc_signal< sc_lv<8> > grp_aes128_add_round_key_fu_269_state_d0;
    sc_signal< sc_lv<4> > grp_aes128_add_round_key_fu_269_round_key_address0;
    sc_signal< sc_logic > grp_aes128_add_round_key_fu_269_round_key_ce0;
    sc_signal< sc_lv<3> > i_reg_161;
    sc_signal< sc_lv<3> > j_reg_172;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_lv<4> > i_1_reg_183;
    sc_signal< sc_logic > ap_CS_fsm_state9;
    sc_signal< sc_logic > ap_CS_fsm_state19;
    sc_signal< sc_lv<5> > i_i_reg_195;
    sc_signal< sc_logic > ap_CS_fsm_state11;
    sc_signal< sc_logic > ap_CS_fsm_state14;
    sc_signal< sc_lv<5> > i_i6_reg_206;
    sc_signal< sc_logic > ap_CS_fsm_state22;
    sc_signal< sc_lv<3> > i_2_reg_217;
    sc_signal< sc_logic > ap_CS_fsm_state25;
    sc_signal< sc_lv<3> > j_1_reg_228;
    sc_signal< sc_logic > ap_CS_fsm_state28;
    sc_signal< sc_logic > grp_aes128_mix_columns_h_fu_239_ap_start_reg;
    sc_signal< sc_logic > ap_CS_fsm_state16;
    sc_signal< sc_logic > ap_CS_fsm_state17;
    sc_signal< sc_logic > grp_aes128_expand_key_hw_fu_244_ap_start_reg;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_logic > grp_aes128_shift_rows_hw_fu_255_ap_start_reg;
    sc_signal< sc_logic > ap_CS_fsm_state15;
    sc_signal< sc_logic > ap_CS_fsm_state23;
    sc_signal< sc_logic > grp_aes128_extract_round_fu_260_ap_start_reg;
    sc_signal< sc_logic > ap_CS_fsm_state6;
    sc_signal< sc_logic > ap_CS_fsm_state7;
    sc_signal< sc_logic > grp_aes128_add_round_key_fu_269_ap_start_reg;
    sc_signal< sc_logic > ap_CS_fsm_state8;
    sc_signal< sc_logic > ap_CS_fsm_state18;
    sc_signal< sc_logic > ap_CS_fsm_state24;
    sc_signal< sc_lv<64> > tmp_29_fu_324_p1;
    sc_signal< sc_lv<64> > tmp_32_fu_346_p1;
    sc_signal< sc_lv<64> > tmp_i_fu_381_p1;
    sc_signal< sc_lv<64> > tmp_i_19_fu_392_p1;
    sc_signal< sc_lv<64> > tmp_i8_fu_409_p1;
    sc_signal< sc_lv<64> > tmp_i1_fu_414_p1;
    sc_signal< sc_lv<64> > tmp_36_fu_480_p1;
    sc_signal< sc_lv<64> > tmp_38_fu_490_p1;
    sc_signal< sc_lv<2> > tmp_39_fu_291_p1;
    sc_signal< sc_lv<4> > j_cast_fu_303_p1;
    sc_signal< sc_lv<4> > tmp_28_fu_319_p2;
    sc_signal< sc_lv<2> > tmp_40_fu_329_p1;
    sc_signal< sc_lv<4> > tmp_30_fu_333_p3;
    sc_signal< sc_lv<8> > tmp_s_fu_356_p3;
    sc_signal< sc_lv<2> > tmp_41_fu_435_p1;
    sc_signal< sc_lv<2> > tmp_42_fu_463_p1;
    sc_signal< sc_lv<4> > tmp_34_fu_467_p3;
    sc_signal< sc_lv<4> > tmp_35_fu_475_p2;
    sc_signal< sc_lv<4> > j_1_cast_fu_447_p1;
    sc_signal< sc_lv<28> > ap_NS_fsm;
    sc_signal< bool > ap_block_state23_on_subcall_done;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<28> ap_ST_fsm_state1;
    static const sc_lv<28> ap_ST_fsm_state2;
    static const sc_lv<28> ap_ST_fsm_state3;
    static const sc_lv<28> ap_ST_fsm_state4;
    static const sc_lv<28> ap_ST_fsm_state5;
    static const sc_lv<28> ap_ST_fsm_state6;
    static const sc_lv<28> ap_ST_fsm_state7;
    static const sc_lv<28> ap_ST_fsm_state8;
    static const sc_lv<28> ap_ST_fsm_state9;
    static const sc_lv<28> ap_ST_fsm_state10;
    static const sc_lv<28> ap_ST_fsm_state11;
    static const sc_lv<28> ap_ST_fsm_state12;
    static const sc_lv<28> ap_ST_fsm_state13;
    static const sc_lv<28> ap_ST_fsm_state14;
    static const sc_lv<28> ap_ST_fsm_state15;
    static const sc_lv<28> ap_ST_fsm_state16;
    static const sc_lv<28> ap_ST_fsm_state17;
    static const sc_lv<28> ap_ST_fsm_state18;
    static const sc_lv<28> ap_ST_fsm_state19;
    static const sc_lv<28> ap_ST_fsm_state20;
    static const sc_lv<28> ap_ST_fsm_state21;
    static const sc_lv<28> ap_ST_fsm_state22;
    static const sc_lv<28> ap_ST_fsm_state23;
    static const sc_lv<28> ap_ST_fsm_state24;
    static const sc_lv<28> ap_ST_fsm_state25;
    static const sc_lv<28> ap_ST_fsm_state26;
    static const sc_lv<28> ap_ST_fsm_state27;
    static const sc_lv<28> ap_ST_fsm_state28;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_9;
    static const sc_lv<32> ap_const_lv32_B;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_C;
    static const sc_lv<32> ap_const_lv32_13;
    static const sc_lv<32> ap_const_lv32_14;
    static const sc_lv<32> ap_const_lv32_19;
    static const sc_lv<32> ap_const_lv32_1A;
    static const sc_lv<3> ap_const_lv3_0;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<4> ap_const_lv4_1;
    static const sc_lv<32> ap_const_lv32_8;
    static const sc_lv<32> ap_const_lv32_12;
    static const sc_lv<5> ap_const_lv5_0;
    static const sc_lv<32> ap_const_lv32_A;
    static const sc_lv<32> ap_const_lv32_D;
    static const sc_lv<32> ap_const_lv32_15;
    static const sc_lv<32> ap_const_lv32_18;
    static const sc_lv<32> ap_const_lv32_1B;
    static const sc_lv<32> ap_const_lv32_F;
    static const sc_lv<32> ap_const_lv32_10;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_E;
    static const sc_lv<32> ap_const_lv32_16;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<10> ap_const_lv10_0;
    static const sc_lv<10> ap_const_lv10_A0;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<32> ap_const_lv32_11;
    static const sc_lv<32> ap_const_lv32_17;
    static const sc_lv<3> ap_const_lv3_4;
    static const sc_lv<3> ap_const_lv3_1;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<4> ap_const_lv4_A;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_lv<5> ap_const_lv5_10;
    static const sc_lv<5> ap_const_lv5_1;
    static const bool ap_const_boolean_0;
    static const sc_lv<8> ap_const_lv8_0;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state10();
    void thread_ap_CS_fsm_state11();
    void thread_ap_CS_fsm_state12();
    void thread_ap_CS_fsm_state13();
    void thread_ap_CS_fsm_state14();
    void thread_ap_CS_fsm_state15();
    void thread_ap_CS_fsm_state16();
    void thread_ap_CS_fsm_state17();
    void thread_ap_CS_fsm_state18();
    void thread_ap_CS_fsm_state19();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state20();
    void thread_ap_CS_fsm_state21();
    void thread_ap_CS_fsm_state22();
    void thread_ap_CS_fsm_state23();
    void thread_ap_CS_fsm_state24();
    void thread_ap_CS_fsm_state25();
    void thread_ap_CS_fsm_state26();
    void thread_ap_CS_fsm_state27();
    void thread_ap_CS_fsm_state28();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state5();
    void thread_ap_CS_fsm_state6();
    void thread_ap_CS_fsm_state7();
    void thread_ap_CS_fsm_state8();
    void thread_ap_CS_fsm_state9();
    void thread_ap_block_state23_on_subcall_done();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_exitcond1_fu_423_p2();
    void thread_exitcond2_fu_350_p2();
    void thread_exitcond3_fu_307_p2();
    void thread_exitcond4_fu_279_p2();
    void thread_exitcond_fu_451_p2();
    void thread_exitcond_i7_fu_397_p2();
    void thread_exitcond_i_fu_369_p2();
    void thread_expanded_key_address0();
    void thread_expanded_key_ce0();
    void thread_expanded_key_we0();
    void thread_grp_aes128_add_round_key_fu_269_ap_start();
    void thread_grp_aes128_expand_key_hw_fu_244_ap_start();
    void thread_grp_aes128_extract_round_fu_260_ap_start();
    void thread_grp_aes128_extract_round_fu_260_expanded_key_offset();
    void thread_grp_aes128_mix_columns_h_fu_239_ap_start();
    void thread_grp_aes128_shift_rows_hw_fu_255_ap_start();
    void thread_i_11_fu_285_p2();
    void thread_i_12_fu_403_p2();
    void thread_i_13_fu_386_p2();
    void thread_i_14_fu_429_p2();
    void thread_i_2_cast_fu_419_p1();
    void thread_i_3_fu_375_p2();
    void thread_i_cast_fu_275_p1();
    void thread_in_r_address0();
    void thread_in_r_ce0();
    void thread_j_1_cast_fu_447_p1();
    void thread_j_6_fu_313_p2();
    void thread_j_7_fu_457_p2();
    void thread_j_cast_fu_303_p1();
    void thread_key_address0();
    void thread_key_ce0();
    void thread_out_r_address0();
    void thread_out_r_ce0();
    void thread_out_r_d0();
    void thread_out_r_we0();
    void thread_round_key_address0();
    void thread_round_key_ce0();
    void thread_round_key_we0();
    void thread_sbox_hw_address0();
    void thread_sbox_hw_ce0();
    void thread_state_address0();
    void thread_state_ce0();
    void thread_state_d0();
    void thread_state_we0();
    void thread_tmp_28_fu_319_p2();
    void thread_tmp_29_fu_324_p1();
    void thread_tmp_30_fu_333_p3();
    void thread_tmp_31_fu_341_p2();
    void thread_tmp_32_fu_346_p1();
    void thread_tmp_33_fu_439_p3();
    void thread_tmp_34_fu_467_p3();
    void thread_tmp_35_fu_475_p2();
    void thread_tmp_36_fu_480_p1();
    void thread_tmp_37_fu_485_p2();
    void thread_tmp_38_fu_490_p1();
    void thread_tmp_39_fu_291_p1();
    void thread_tmp_40_fu_329_p1();
    void thread_tmp_41_cast_fu_364_p1();
    void thread_tmp_41_fu_435_p1();
    void thread_tmp_42_fu_463_p1();
    void thread_tmp_fu_295_p3();
    void thread_tmp_i1_fu_414_p1();
    void thread_tmp_i8_fu_409_p1();
    void thread_tmp_i_19_fu_392_p1();
    void thread_tmp_i_fu_381_p1();
    void thread_tmp_s_fu_356_p3();
    void thread_ap_NS_fsm();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
