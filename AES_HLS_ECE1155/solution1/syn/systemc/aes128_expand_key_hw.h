// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _aes128_expand_key_hw_HH_
#define _aes128_expand_key_hw_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "aes128_encrypt_bldEe.h"
#include "aes128_encrypt_bleOg.h"
#include "aes128_expand_keybkb.h"
#include "aes128_expand_keycud.h"

namespace ap_rtl {

struct aes128_expand_key_hw : public sc_module {
    // Port declarations 14
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<4> > key_address0;
    sc_out< sc_logic > key_ce0;
    sc_in< sc_lv<8> > key_q0;
    sc_out< sc_lv<8> > expanded_key_address0;
    sc_out< sc_logic > expanded_key_ce0;
    sc_out< sc_logic > expanded_key_we0;
    sc_out< sc_lv<8> > expanded_key_d0;
    sc_in< sc_lv<8> > expanded_key_q0;
    sc_signal< sc_lv<1> > ap_var_for_const0;


    // Module declarations
    aes128_expand_key_hw(sc_module_name name);
    SC_HAS_PROCESS(aes128_expand_key_hw);

    ~aes128_expand_key_hw();

    sc_trace_file* mVcdFile;

    aes128_expand_keybkb* sbox_hw_U;
    aes128_expand_keycud* rcon_hw_U;
    aes128_encrypt_bldEe<1,1,1,1,1,1,2,1>* aes128_encrypt_bldEe_U1;
    aes128_encrypt_bleOg<1,1,8,8,8,8,2,8>* aes128_encrypt_bleOg_U2;
    aes128_encrypt_bleOg<1,1,8,8,8,8,2,8>* aes128_encrypt_bleOg_U3;
    aes128_encrypt_bleOg<1,1,8,8,8,8,2,8>* aes128_encrypt_bleOg_U4;
    aes128_encrypt_bleOg<1,1,8,8,8,8,2,8>* aes128_encrypt_bleOg_U5;
    aes128_encrypt_bleOg<1,1,8,8,8,8,2,8>* aes128_encrypt_bleOg_U6;
    sc_signal< sc_lv<15> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<8> > sbox_hw_address0;
    sc_signal< sc_logic > sbox_hw_ce0;
    sc_signal< sc_lv<8> > sbox_hw_q0;
    sc_signal< sc_lv<8> > rcon_hw_address0;
    sc_signal< sc_logic > rcon_hw_ce0;
    sc_signal< sc_lv<8> > rcon_hw_q0;
    sc_signal< sc_lv<5> > tmp_s_fu_614_p2;
    sc_signal< sc_lv<5> > tmp_s_reg_896;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<1> > exitcond3_fu_608_p2;
    sc_signal< sc_lv<3> > i_7_fu_646_p2;
    sc_signal< sc_lv<3> > i_7_reg_920;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_lv<1> > exitcond2_fu_640_p2;
    sc_signal< sc_lv<2> > tmp_30_fu_673_p1;
    sc_signal< sc_lv<2> > tmp_30_reg_930;
    sc_signal< sc_lv<1> > tmp_17_fu_681_p2;
    sc_signal< sc_lv<1> > tmp_17_reg_934;
    sc_signal< sc_logic > ap_CS_fsm_state6;
    sc_signal< sc_lv<2> > i_8_fu_693_p2;
    sc_signal< sc_lv<2> > i_8_reg_955;
    sc_signal< sc_logic > ap_CS_fsm_state8;
    sc_signal< sc_lv<1> > write_flag_be_i_fu_699_p6;
    sc_signal< sc_lv<1> > write_flag_be_i_reg_960;
    sc_signal< sc_lv<1> > exitcond_i_fu_687_p2;
    sc_signal< sc_lv<8> > tmp_0_4_fu_713_p3;
    sc_signal< sc_lv<8> > word12_be_i_fu_721_p6;
    sc_signal< sc_logic > ap_CS_fsm_state9;
    sc_signal< sc_lv<8> > word2_be_i_fu_735_p6;
    sc_signal< sc_lv<3> > i_9_fu_774_p2;
    sc_signal< sc_lv<3> > i_9_reg_983;
    sc_signal< sc_logic > ap_CS_fsm_state10;
    sc_signal< sc_lv<2> > tmp_31_fu_780_p1;
    sc_signal< sc_lv<2> > tmp_31_reg_988;
    sc_signal< sc_lv<1> > exitcond1_fu_768_p2;
    sc_signal< sc_logic > ap_CS_fsm_state11;
    sc_signal< sc_lv<8> > size_3_fu_829_p2;
    sc_signal< sc_lv<8> > size_3_reg_1010;
    sc_signal< sc_logic > ap_CS_fsm_state13;
    sc_signal< sc_lv<3> > i_10_fu_841_p2;
    sc_signal< sc_lv<3> > i_10_reg_1018;
    sc_signal< sc_logic > ap_CS_fsm_state14;
    sc_signal< sc_lv<1> > exitcond_fu_835_p2;
    sc_signal< sc_lv<8> > tmp_25_fu_862_p6;
    sc_signal< sc_lv<8> > tmp_25_reg_1028;
    sc_signal< sc_lv<8> > size_4_fu_887_p2;
    sc_signal< sc_logic > ap_CS_fsm_state15;
    sc_signal< sc_lv<5> > size_reg_149;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<8> > tmp_3_5_reg_532;
    sc_signal< sc_lv<8> > tmp_3_reg_160;
    sc_signal< sc_lv<8> > tmp_2_5_reg_545;
    sc_signal< sc_lv<8> > tmp_2_reg_172;
    sc_signal< sc_lv<8> > tmp_1_5_reg_558;
    sc_signal< sc_lv<8> > tmp_1_reg_184;
    sc_signal< sc_lv<8> > tmp_0_1_reg_571;
    sc_signal< sc_lv<8> > tmp_0_reg_196;
    sc_signal< sc_lv<8> > size_1_reg_208;
    sc_signal< sc_lv<8> > word_3_read_assign_reg_220;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_lv<1> > tmp_16_fu_634_p2;
    sc_signal< sc_logic > ap_CS_fsm_state7;
    sc_signal< sc_lv<8> > word_2_read_assign_reg_231;
    sc_signal< sc_lv<8> > word_1_read_assign_reg_242;
    sc_signal< sc_lv<8> > tmp_33_reg_253;
    sc_signal< sc_lv<3> > i_reg_264;
    sc_signal< sc_lv<8> > word_3_read_assign_s_reg_275;
    sc_signal< sc_lv<8> > word_2_read_assign_s_reg_293;
    sc_signal< sc_lv<8> > word_1_read_assign_s_reg_311;
    sc_signal< sc_lv<8> > tmp_29_be_reg_329;
    sc_signal< sc_lv<1> > write_flag_i_reg_347;
    sc_signal< sc_lv<8> > tmp_2_2_reg_358;
    sc_signal< sc_lv<8> > tmp_1_2_reg_369;
    sc_signal< sc_lv<2> > ap_phi_mux_i_i_phi_fu_384_p4;
    sc_signal< sc_lv<2> > i_i_reg_380;
    sc_signal< sc_lv<8> > word_i_13_reg_392;
    sc_signal< sc_lv<8> > tmp_3_3_reg_406;
    sc_signal< sc_logic > ap_CS_fsm_state12;
    sc_signal< sc_lv<8> > tmp_2_3_reg_417;
    sc_signal< sc_lv<8> > tmp_1_3_reg_428;
    sc_signal< sc_lv<8> > tmp_0_s_reg_439;
    sc_signal< sc_lv<3> > i_1_reg_449;
    sc_signal< sc_lv<8> > tmp_3_3_be_reg_460;
    sc_signal< sc_lv<8> > tmp_2_3_be_reg_478;
    sc_signal< sc_lv<8> > tmp_1_3_be_reg_496;
    sc_signal< sc_lv<8> > tmp_0_be_reg_514;
    sc_signal< sc_lv<8> > tmp_0_3_fu_822_p2;
    sc_signal< sc_lv<3> > i_2_reg_583;
    sc_signal< sc_lv<8> > size_2_reg_594;
    sc_signal< sc_lv<64> > tmp_14_fu_620_p1;
    sc_signal< sc_lv<64> > tmp_15_fu_630_p1;
    sc_signal< sc_lv<64> > tmp_19_fu_668_p1;
    sc_signal< sc_lv<64> > tmp_22_fu_798_p1;
    sc_signal< sc_lv<64> > tmp_20_fu_812_p1;
    sc_signal< sc_lv<64> > tmp_24_fu_853_p1;
    sc_signal< sc_lv<64> > tmp_27_fu_882_p1;
    sc_signal< sc_lv<32> > j_fu_64;
    sc_signal< sc_lv<32> > j_5_fu_806_p2;
    sc_signal< sc_lv<8> > word_i_fu_68;
    sc_signal< sc_lv<8> > word_be_i_fu_749_p6;
    sc_signal< sc_lv<8> > tmp_26_fu_876_p2;
    sc_signal< sc_lv<3> > tmp_fu_652_p2;
    sc_signal< sc_lv<8> > tmp_cast_cast_fu_658_p1;
    sc_signal< sc_lv<8> > tmp_18_fu_662_p2;
    sc_signal< sc_lv<4> > tmp_29_fu_677_p1;
    sc_signal< sc_lv<2> > tmp_21_fu_784_p5;
    sc_signal< sc_lv<8> > tmp_21_fu_784_p6;
    sc_signal< sc_lv<32> > j_5_fu_806_p0;
    sc_signal< sc_lv<32> > tmp_20_fu_812_p0;
    sc_signal< sc_lv<8> > tmp_23_fu_847_p2;
    sc_signal< sc_lv<2> > tmp_25_fu_862_p5;
    sc_signal< sc_lv<15> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<15> ap_ST_fsm_state1;
    static const sc_lv<15> ap_ST_fsm_state2;
    static const sc_lv<15> ap_ST_fsm_state3;
    static const sc_lv<15> ap_ST_fsm_state4;
    static const sc_lv<15> ap_ST_fsm_state5;
    static const sc_lv<15> ap_ST_fsm_state6;
    static const sc_lv<15> ap_ST_fsm_state7;
    static const sc_lv<15> ap_ST_fsm_state8;
    static const sc_lv<15> ap_ST_fsm_state9;
    static const sc_lv<15> ap_ST_fsm_state10;
    static const sc_lv<15> ap_ST_fsm_state11;
    static const sc_lv<15> ap_ST_fsm_state12;
    static const sc_lv<15> ap_ST_fsm_state13;
    static const sc_lv<15> ap_ST_fsm_state14;
    static const sc_lv<15> ap_ST_fsm_state15;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<32> ap_const_lv32_8;
    static const sc_lv<32> ap_const_lv32_9;
    static const sc_lv<32> ap_const_lv32_A;
    static const sc_lv<32> ap_const_lv32_C;
    static const sc_lv<32> ap_const_lv32_D;
    static const sc_lv<32> ap_const_lv32_E;
    static const sc_lv<5> ap_const_lv5_0;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<8> ap_const_lv8_10;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<3> ap_const_lv3_0;
    static const sc_lv<2> ap_const_lv2_3;
    static const sc_lv<2> ap_const_lv2_2;
    static const sc_lv<2> ap_const_lv2_1;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<32> ap_const_lv32_B;
    static const sc_lv<5> ap_const_lv5_10;
    static const sc_lv<5> ap_const_lv5_1;
    static const sc_lv<8> ap_const_lv8_B0;
    static const sc_lv<3> ap_const_lv3_4;
    static const sc_lv<3> ap_const_lv3_1;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_lv<8> ap_const_lv8_4;
    static const sc_lv<8> ap_const_lv8_F0;
    static const sc_lv<8> ap_const_lv8_1;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_var_for_const0();
    void thread_ap_clk_no_reset_();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state10();
    void thread_ap_CS_fsm_state11();
    void thread_ap_CS_fsm_state12();
    void thread_ap_CS_fsm_state13();
    void thread_ap_CS_fsm_state14();
    void thread_ap_CS_fsm_state15();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state5();
    void thread_ap_CS_fsm_state6();
    void thread_ap_CS_fsm_state7();
    void thread_ap_CS_fsm_state8();
    void thread_ap_CS_fsm_state9();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_phi_mux_i_i_phi_fu_384_p4();
    void thread_ap_ready();
    void thread_exitcond1_fu_768_p2();
    void thread_exitcond2_fu_640_p2();
    void thread_exitcond3_fu_608_p2();
    void thread_exitcond_fu_835_p2();
    void thread_exitcond_i_fu_687_p2();
    void thread_expanded_key_address0();
    void thread_expanded_key_ce0();
    void thread_expanded_key_d0();
    void thread_expanded_key_we0();
    void thread_i_10_fu_841_p2();
    void thread_i_7_fu_646_p2();
    void thread_i_8_fu_693_p2();
    void thread_i_9_fu_774_p2();
    void thread_j_5_fu_806_p0();
    void thread_j_5_fu_806_p2();
    void thread_key_address0();
    void thread_key_ce0();
    void thread_rcon_hw_address0();
    void thread_rcon_hw_ce0();
    void thread_sbox_hw_address0();
    void thread_sbox_hw_ce0();
    void thread_size_3_fu_829_p2();
    void thread_size_4_fu_887_p2();
    void thread_tmp_0_3_fu_822_p2();
    void thread_tmp_0_4_fu_713_p3();
    void thread_tmp_14_fu_620_p1();
    void thread_tmp_15_fu_630_p1();
    void thread_tmp_16_fu_634_p2();
    void thread_tmp_17_fu_681_p2();
    void thread_tmp_18_fu_662_p2();
    void thread_tmp_19_fu_668_p1();
    void thread_tmp_20_fu_812_p0();
    void thread_tmp_20_fu_812_p1();
    void thread_tmp_21_fu_784_p5();
    void thread_tmp_22_fu_798_p1();
    void thread_tmp_23_fu_847_p2();
    void thread_tmp_24_fu_853_p1();
    void thread_tmp_25_fu_862_p5();
    void thread_tmp_26_fu_876_p2();
    void thread_tmp_27_fu_882_p1();
    void thread_tmp_29_fu_677_p1();
    void thread_tmp_30_fu_673_p1();
    void thread_tmp_31_fu_780_p1();
    void thread_tmp_cast_cast_fu_658_p1();
    void thread_tmp_fu_652_p2();
    void thread_tmp_s_fu_614_p2();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
